#ifndef _WIFIPARAM_H_
#define _WIFIPARAM_H_

#include "DomainConst.h"
#include "SNPlatOS.h"

/**********************************************************************/
//此处用于控制文件编译字节对齐，拷贝时两行注释间内容需一起拷贝，
//结束处的“#ifdef PRAGMA_PACK”部分也要一起拷贝，否则pragma pack入栈出栈不匹配
#if(PRAGMA_PACK_DEFINE != 10000)
	# error Not included "SNPlatOS.h".
#endif
 
#ifdef PRAGMA_PACK
	#ifdef WIN32  
		#pragma pack(push, PRAGMA_PACK_CHAR)
	#endif

	#ifndef WIN32  
		#ifndef _PACKED_1_  
		  
		#define _PACKED_1_ __attribute__((packed, aligned(PRAGMA_PACK_CHAR)))	// for gcc   
		#endif  
	#else  
		#ifndef _PACKED_1_  
		#define _PACKED_1_  
		#endif  
	#endif  
#else  
	#ifndef _PACKED_1_  
	#define _PACKED_1_  
	#endif  
#endif
/**********************************************************************/

class SN_DLL_API WifiParam
{
public:
	WifiParam(void);
	~WifiParam(void);

public:

	/************************************************************************
	**概述：
	*		设置启用Wifi标
	**输入：
	*		p_bUseWifiFlag：启用Wifi标志
	**输出：
	*		无
	**返回值：
	*		无
	************************************************************************/
	void setEnableFlag(const bool p_bEnableFlag);

	/************************************************************************
	**概述：获取启用Wifi标
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		
	************************************************************************/
	const bool getEnableFlag() const;

	/************************************************************************
	**概述：
	*		设置SSID
	**输入：
	*		p_pszSSID：SSID
	**输出：
	*		无
	**返回值：
	*		无
	************************************************************************/
	bool setSSID(const char* p_pszSSID);

	/************************************************************************
	**概述：
	*		获取SSID
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		SSID
	************************************************************************/
	const char* getSSID() const ;


	/************************************************************************
	**概述：
	*		设置密码
	**输入：
	*		p_strPassword：密码
	**输出：
	*		无
	**返回值：
	*		无
	************************************************************************/
	bool setPassword(const char* p_pszPassword);

	/************************************************************************
	**概述：
	*		获取密码
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		m_strPassword
	************************************************************************/
	const char* getPassword() const ;


	/************************************************************************
	**概述：
	*		设置是否启用自动获取IP
	**输入：
	*		p_bUseDynamicIPFlag:启用自动获取IP标志
	**输出：
	*		无
	**返回值：
	*		无
	************************************************************************/
	void setUseDynamicIPFlag(const bool p_bUseDynamicIPFlag);

	/************************************************************************
	**概述：
	*		获取是否启用自动获取IP
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		
	************************************************************************/
	const bool getUseDynamicIPFlag() const;

	/************************************************************************
	**概述：
	*		设置静态IP地址
	**输入：
	*		p_nStaticIP ：静态IP地址
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*
	************************************************************************/
	bool setStaticIP(const char * p_pszStaticIP);

	/************************************************************************
	**概述：
	*		获取静态IP地址
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		静态IP地址
	**功能：
	*
	************************************************************************/
	const char * getStaticIP() const;

	/************************************************************************
	**概述：
	*		设置子网掩码
	**输入：
	*		p_nSubnetMask ：子网掩码
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*
	************************************************************************/
	bool setSubnetMask(const char * p_pszSubnetMask);

	/************************************************************************
	**概述：
	*		获取子网掩码
	**输入：
	*		无
	**输出：
	**		无
	**返回值：
	*		子网掩码
	**功能：
	*
	************************************************************************/
	const char * getSubnetMask() const;

	/************************************************************************
	**概述：
	*		设置默认网关地址
	**输入：
	*		p_pszGateway ：默认网关地址
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*
	************************************************************************/
	bool setGateway(const char * p_pszGateway);

	/************************************************************************
	**概述：
	*		获取默认网关地址
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		默认网关地址
	**功能：
	*
	************************************************************************/
	const char * getGateway() const;

	/************************************************************************
	**概述：
	*		设置DNS服务器IP地址
	**输入：
	*		p_nDNS：DNS服务器IP地址
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*
	************************************************************************/
	bool setDNS(const char * p_pszDNS);

	/************************************************************************
	**概述：
	*		获取DNS服务器IP地址
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		DNS服务器IP地址
	**功能：
	*
	************************************************************************/
	const char * getDNS() const;


private:
	bool			m_bEnableFlag;									//是否启用Wifi
	char			m_szSSID[CONST_MAXLENGTH_SSID+1];				//SSID
	char			m_szPassword[CONST_MAXLENGTH_SSID_PASSWORD+1];	//密码
	
	bool			m_bUseDynamicIPFlag;							//是否启用动态IP

	char			m_szStaticIP[CONST_MAXLENGTH_IP + 1];			//静态IP地址
	char			m_szSubnetMask[CONST_MAXLENGTH_IP + 1];			//子网掩码
	char			m_szGateway[CONST_MAXLENGTH_IP + 1];			//网关

	char			m_szDNS[CONST_MAXLENGTH_IP + 1];				//DNS服务器IP地址

}_PACKED_1_;

/**********************************************************************/
#ifdef PRAGMA_PACK
 	#ifdef WIN32  
		#pragma pack(pop)
	#endif
 #endif
/**********************************************************************/

#endif //_WIFIPARAM_H_
