#ifndef PTZPresetV2_H_
#define PTZPresetV2_H_

#include "DomainConst.h"
#include "PTZOperationInfo.h"
#include <string.h>
#include "SNPlatOS.h"

/**********************************************************************/
//此处用于控制文件编译字节对齐，拷贝时两行注释间内容需一起拷贝，
//结束处的“#ifdef PRAGMA_PACK”部分也要一起拷贝，否则pragma pack入栈出栈不匹配
#if(PRAGMA_PACK_DEFINE != 10000)
	# error Not included "SNPlatOS.h".
#endif
 
#ifdef PRAGMA_PACK
	#ifdef WIN32  
		#pragma pack(push, PRAGMA_PACK_CHAR)
	#endif

	#ifndef WIN32  
		#ifndef _PACKED_1_  
		  
		#define _PACKED_1_ __attribute__((packed, aligned(PRAGMA_PACK_CHAR)))	// for gcc   
		#endif  
	#else  
		#ifndef _PACKED_1_  
		#define _PACKED_1_  
		#endif  
	#endif  
#else  
	#ifndef _PACKED_1_  
	#define _PACKED_1_  
	#endif  
#endif
/**********************************************************************/

class SN_DLL_API PTZPresetV2
{
public:
	PTZPresetV2(void);
	~PTZPresetV2(void);
	PTZPresetV2(const PTZPresetV2& p_objPTZPresetV2);

public:
	/************************************************************************
	**概述：
	*		设置云台预制点ID号
	**输入：
	*		p_nPresetId ：预制点的ID号
	**输出：
	*		无
	*返回值：
	*		无
	**功能：
	*		
	************************************************************************/
	void setPresetId(const int p_nPresetId);

	/************************************************************************
	**概述：
	*		获取预制点的ID号
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		预制点的ID号
	**功能：
	*    
	************************************************************************/
	const int getPresetId() const;

	/************************************************************************
	**概述：
	*		设置云台预制点的名字
    **输入：
	*	  p_pszPresetName ：云台预制点的名字，字符串，最大长度
	*						  为CONST_MAXLENTH_PTZ_PROTOCOL_NAME字节,结尾以‘\0’结束。 
	**输出：
	*		无
	**返回值：
	*		true ：成功
	*		false：失败
	*功能：
	*    若输入p_pszPresetName长度<=CONST_MAXLENGTH_PTZ_PRESET_NAME，返回true，并保存到m_pszPresetName;
	*	 若输入p_pszPresetName为null或者其长度>CONST_MAXLENGTH_PTZ_PRESET_NAME，返回false
	************************************************************************/
	bool setPresetName(const char* p_pszPresetName);

	/************************************************************************
	**概述：
	*		获取云台协议的名字
    **输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		云台协议的名字的地址
	**功能：
	*		
	************************************************************************/
	const char* getPresetName() const;

	/************************************************************************
	**概述：
	*		设置云台水平坐标值
	**输入：
	*		p_nPanValue ：水平坐标
	**输出：
	*		无
	*返回值：
	*		无
	**功能：
	*		
	************************************************************************/
	void setPanValue(const int p_nPanValue);

	/************************************************************************
	**概述：
	*		获取水平坐标值
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		水平坐标值
	**功能：
	*    
	************************************************************************/
	const int getPanValue() const;

	/************************************************************************
	**概述：
	*		设置云台垂直坐标值
	**输入：
	*		p_nTiltValue ：垂直坐标
	**输出：
	*		无
	*返回值：
	*		无
	**功能：
	*		
	************************************************************************/
	void setTiltValue(const int p_nTiltValue);

	/************************************************************************
	**概述：
	*		获取垂直坐标值
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		垂直坐标值
	**功能：
	*    
	************************************************************************/
	const int getTiltValue() const;

	/************************************************************************
	**概述：
	*		设置预置点倍数
	**输入：
	*		p_nZoomValue ：倍数
	**输出：
	*		无
	*返回值：
	*		无
	**功能：
	*		
	************************************************************************/
	void setZoomValue(const int p_nZoomValue);

	/************************************************************************
	**概述：
	*		获取预置点倍数
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		预置点倍数
	**功能：
	*    
	************************************************************************/
	const int getZoomValue() const;

	/*********************************************************************
	*********说明：设置水平速度值
	********************************************************************/
	void setPanSpeed(const int p_nPanSpeed);
	/*********************************************************************
	*********返回值：水平速度信息
	********************************************************************/
	const int getPanSpeed()const;
	/*********************************************************************
	*********说明：设置垂直速度
	********************************************************************/
	void setTiltSpeed(const int p_nTiltSpeed);
	/*********************************************************************
	*********返回值：垂直速度
	********************************************************************/
	const int getTiltSpeed()const;

	//设置转动方向
	void setDirectionValue(const int p_nDirectionValue);
	const int getDirectionValue()const;

	//设置停止时间
	void setStopTime(const int p_nStopTime);
	const int getStopTime()const;

	/************************************************************************
	**概述：
	*		设置预置点白天聚焦值
	**输入：
	*		p_nDayFocusValue ：白天聚焦值
	**输出：
	*		无
	*返回值：
	*		无
	**功能：
	*		
	************************************************************************/
	void setDayFocusValue(const int p_nDayFocusValue);

	/************************************************************************
	**概述：
	*		获取预置点白天聚焦值
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		预置点白天聚焦值
	**功能：
	*    
	************************************************************************/
	const int getDayFocusValue()const;

	/************************************************************************
	**概述：
	*		设置预置点夜晚聚焦值
	**输入：
	*		p_nDayFocusValue ：夜晚聚焦值
	**输出：
	*		无
	*返回值：
	*		无
	**功能：
	*		
	************************************************************************/
	void setNightFocusValue(const int p_nNightFocusValue);

	/************************************************************************
	**概述：
	*		获取预置点夜晚聚焦值
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		预置点夜晚聚焦值
	**功能：
	*    
	************************************************************************/
	const int getNightFocusValue()const;

	/************************************************************************
	**概述：
	*		设置预置点日夜模式
	**输入：
	*		p_nDNMode ：日夜模式
	**输出：
	*		无
	*返回值：
	*		无
	**功能：
	*		
	************************************************************************/
	void setDNMode(const int p_nDNMode);

	/************************************************************************
	**概述：
	*		获取预置点日夜模式
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		预置点日夜模式
	**功能：
	*    
	************************************************************************/
	const int getDNMode()const;

/************************************************************************
	**概述：
	*		设置预置点PTZ参数
	**输入：
	*		p_objPTZOperationInfo ：预置点PTZ参数
	**输出：
	*		无
	*返回值：
	*		无
	**功能：
	*		
	************************************************************************/
	void setPTZOperationInfo(const PTZOperationInfo &p_objPTZOperationInfo);

	/************************************************************************
	**概述：
	*		获取预置点PTZ参数
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		预置点PTZ参数
	**功能：
	*    
	************************************************************************/
	const PTZOperationInfo &getPTZOperationInfo()const;

	/************************************************************************
	**概述：
	*		赋值函数
	**输入：
	*		p_objPTZPreset：云台预制点
	**输出：
	*		无
	**返回值：
	*		云台预制点
	**功能：
	************************************************************************/
	PTZPresetV2& operator =(const PTZPresetV2& p_objPTZPresetV2);

	/****************************************************************************
	**概述：
	*		定义“等于”操作符
	**输入：
	*		p_objPTZPreset：PTZPreset类的一个对象的引用。
	**输出：
	*		无
	**返回值：
	*		true:相等
	*		false：不相等
	**功能：
	*		两个PTZPreset类的对象，所有属性均相等，则说明这两个对象相等，返回true
	*		如果有一个属性不等，则返回false。
	*****************************************************************************/
	bool operator == (const PTZPresetV2& p_objPTZPresetV2) const;

private:

	int		m_nPresetId;													//云台预制点的ID号
	char	m_szPresetName[CONST_MAXLENGTH_PTZ_PRESET_NAME + 1];			//云台预制点的名字
	int		m_nDNMode;
	PTZOperationInfo m_objPTZOperationInfo;

}_PACKED_1_;

/**********************************************************************/
#ifdef PRAGMA_PACK
 	#ifdef WIN32  
		#pragma pack(pop)
	#endif
 #endif
/**********************************************************************/
#endif

