#ifndef _VIDEOQUALITY_H_
#define _VIDEOQUALITY_H_
/*
#ifdef __cplusplus
extern "C" {
#endif
*/ 
#include "SNPlatOS.h"

/**********************************************************************/
//此处用于控制文件编译字节对齐，拷贝时两行注释间内容需一起拷贝，
//结束处的“#ifdef PRAGMA_PACK”部分也要一起拷贝，否则pragma pack入栈出栈不匹配
#if(PRAGMA_PACK_DEFINE != 10000)
	# error Not included "SNPlatOS.h".
#endif
 
#ifdef PRAGMA_PACK
	#ifdef WIN32  
		#pragma pack(push, PRAGMA_PACK_CHAR)
	#endif

	#ifndef WIN32  
		#ifndef _PACKED_1_  
		  
		#define _PACKED_1_ __attribute__((packed, aligned(PRAGMA_PACK_CHAR)))	// for gcc   
		#endif  
	#else  
		#ifndef _PACKED_1_  
		#define _PACKED_1_  
		#endif  
	#endif  
#else  
	#ifndef _PACKED_1_  
	#define _PACKED_1_  
	#endif  
#endif
/**********************************************************************/

class SN_DLL_API VideoQuality
{
public:
	VideoQuality();
	~VideoQuality();	

public:
	/************************************************************************
	概述：设置摄像机的ID号
	输入：
		p_nCameraId : 摄像机的ID号
	输出：
		无
	返回值：
		无
	功能：
	      设置摄像机的ID号
	************************************************************************/
	void setCameraId(const int p_nCameraId);

	/************************************************************************
	概述：获取摄像机的ID号
	输入：
		无
	输出：
		无
	返回值：
		摄像机的ID号
	功能：
	      获取摄像机的ID号
	************************************************************************/
	const int getCameraId() const;

	/************************************************************************
	概述：设置影像的亮度
	输入：
		p_nBrightness : 影像的亮度
	输出：
		无
	返回值：
		无
	功能：
	     设置影像的亮度
	************************************************************************/
	void setBrightness(const int p_nBrightness);

	/************************************************************************
	概述：获取影像的亮度
	输入：
		
	输出：
		无
	返回值：
		影像的亮度值
	功能：
	     获取影像的亮度
	************************************************************************/
	const int getBrightness() const;

	/************************************************************************
	概述：设置影像的对比度
	输入：
		p_nContrast : 影像的对比度
	输出：
		无
	返回值：
		无
	功能：
	     设置影像的对比度
	************************************************************************/
	void setContrast(const int p_nContrast);

	/************************************************************************
	概述：获取影像的对比度
	输入：
		无
	输出：
		无
	返回值：
		影像的对比度
	功能：
	     获取影像的对比度
	************************************************************************/
	const int getContrast() const;

	/************************************************************************
	概述：设置影像的颜色
	输入：
		p_nHue : 影像的颜色
	输出：
		无
	返回值：
		无
	功能：
	     设置影像的颜色
	************************************************************************/
	void setHue(const int p_nHue);

	
	/************************************************************************
	概述：获取影像的颜色(个人理解可以是3选1那样。)
	输入：
		无
	输出：
		无
	返回值：
		影像的颜色
	功能：
	     获取影像的颜色
	************************************************************************/
	const int getHue() const;

	/************************************************************************
	概述：设置影像的饱和度
	输入：
		p_nSaturation:影像的色彩饱和度
	输出：
		无
	返回值：
		无
	功能：
	     设置影像的色彩饱和度
	************************************************************************/
	void setSaturation(const int p_nSaturation);

	
	/************************************************************************
	概述：获取影像的饱和度
	输入：
		无
	输出：
		无
	返回值：
		影像的饱和度
	功能：
	     获取影像的饱和度
	************************************************************************/
	const int getSaturation() const;

	/************************************************************************
	概述：设置影像的锐利度
	输入：
		p_nSharpness:影像的色彩锐利度
	输出：
		无
	返回值：
		无
	功能：
	     设置影像的色彩锐利度
	************************************************************************/
	void setSharpness(const int p_nSharpness);

	
	/************************************************************************
	概述：获取影像的锐利度
	输入：
		无
	输出：
		无
	返回值：
		影像的锐利度
	功能：
	     获取影像的锐利度
	************************************************************************/
	const int getSharpness() const;

	/****************************************************************************
	概述：
			拷贝构造函数
    输入：
		VideoQuality类的一个对象的引用。
	输出：
		无
	返回值：
		无
	功能：
		
	*****************************************************************************/
	VideoQuality(const VideoQuality& p_objVideoQuality);

		/****************************************************************************
	概述：定义“赋值”操作符
    输入：
		VideoQuality类的一个对象的引用。
	输出：
		无
	返回值：
		VideoQuality类对象的引用
	功能：
		将参数对象的所有属性赋值给另外一个对象，将另外一个对象的引用返回。
	*****************************************************************************/
	VideoQuality& operator =(const VideoQuality& p_objVideoQuality);

private:

	int		m_nCameraId;			//摄像机id			

	int		m_nContrast;			//对比度

	int		m_nBrightness;			//亮度

	int		m_nHue;					//色调

	int		m_nSaturation;			//饱和度

	int		m_nSharpness;			//锐度

}_PACKED_1_;

/**********************************************************************/
#ifdef PRAGMA_PACK
 	#ifdef WIN32  
		#pragma pack(pop)
	#endif
 #endif
/**********************************************************************/

#endif //_VIDEOQUALITY_H_

