#ifndef _MOTIONDETECTIONPARAM_H_
#define _MOTIONDETECTIONPARAM_H_

#include "SNPlatOS.h"
#include "DetectionArea.h"
#include <vector>
using namespace std;

/**********************************************************************/
//此处用于控制文件编译字节对齐，拷贝时两行注释间内容需一起拷贝，
//结束处的“#ifdef PRAGMA_PACK”部分也要一起拷贝，否则pragma pack入栈出栈不匹配
#if(PRAGMA_PACK_DEFINE != 10000)
	# error Not included "SNPlatOS.h".
#endif
 
#ifdef PRAGMA_PACK
	#ifdef WIN32  
		#pragma pack(push, PRAGMA_PACK_CHAR)
	#endif

	#ifndef WIN32  
		#ifndef _PACKED_1_  
		  
		#define _PACKED_1_ __attribute__((packed, aligned(PRAGMA_PACK_CHAR)))	// for gcc   
		#endif  
	#else  
		#ifndef _PACKED_1_  
		#define _PACKED_1_  
		#endif  
	#endif  
#else  
	#ifndef _PACKED_1_  
	#define _PACKED_1_  
	#endif  
#endif
/**********************************************************************/

class SN_DLL_API MotionDetectionParam
{
public:
	MotionDetectionParam(void);
	~MotionDetectionParam(void);

	//拷贝构造函数
	MotionDetectionParam (const MotionDetectionParam &p_objMotionDetectionParam);

	/****************************************************************************
	**概述：
	*		设置灵敏度
	**输入：
	*		p_nSensitivity：灵敏度
	**输出：
	*		无
	**返回值：
	*		无 
	**功能：
	*		
	*******************************************************************************/
	void setSensitivity(const int p_nSensitivity);

	/****************************************************************************
	**概述：
	*		获得灵敏度
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		灵敏度
	**功能：
	*
	*******************************************************************************/
	const int getSensitivity() const;


	/************************************************************************
	**概述：
	*		设置侦测区域的检测块数
	**输入：
	*		p_nCheckBlockNum：侦测区域的检测块数
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*
	************************************************************************/
	void setCheckBlockNum(const int p_nCheckBlockNum);

	/************************************************************************
	**概述：
	*		获取侦测区域的检测块数
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		侦测区域的检测块数
	**功能：
	*
	************************************************************************/
	const int getCheckBlockNum() const ;


	/************************************************************************
	**概述：
	*		设置向上检测的标志
	**输入：
	*		p_bToUpCheckFlag：向上检测的标志
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*	设置向上检测的标志
	************************************************************************/
	void setToUpCheckFlag(const bool p_bToUpCheckFlag);

	/************************************************************************
	**概述：
	*		获取向上检测的标志
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		向上检测的标志
	**功能：
	*	获取向上检测的标志
	************************************************************************/
	const bool getToUpCheckFlag()const;


	/************************************************************************
	**概述：
	*		设置向下检测的标志
	**输入：
	*		p_bToDownCheckFlag：向下检测的标志
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*	设置向下检测的标志
	************************************************************************/
	void setToDownCheckFlag(const bool p_bToDownCheckFlag);

	/************************************************************************
	**概述：
	*		获取向下检测的标志
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		向下检测的标志
	**功能：
	*	获取向下检测的标志
	************************************************************************/
	const bool getToDownCheckFlag() const ;


	/************************************************************************
	**概述：
	*		设置向左检测的标志
	**输入：
	*		p_bToLeftCheckFlag：向左检测的标志
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*	设置向左检测的标志
	************************************************************************/
	void setToLeftCheckFlag(const bool p_bToLeftCheckFlag);

	/************************************************************************
	**概述：
	*		获取向左检测的标志
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		向左检测的标志
	**功能：
	*	获取向左检测的标志
	************************************************************************/
	const bool getToLeftCheckFlag() const ;


	/************************************************************************
	**概述：
	*		设置向右检测的标志
	**输入：
	*		p_bToRightCheckFlag：向右检测的标志
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*	设置向右检测的标志
	************************************************************************/
	void setToRightCheckFlag(const bool p_bToRightCheckFlag);

	/************************************************************************
	**概述：
	*		获取向右检测的标志
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		向右检测的标志
	**功能：
	*	获取向右检测的标志
	************************************************************************/
	const bool getToRightCheckFlag() const ;


	/************************************************************************
	**概述：
	*		设置侦测区域是否屏蔽标识
	**输入：
	*		p_bAreaMaskFlag：侦测区域是否屏蔽标识
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*	设置侦测区域是否屏蔽标识
	************************************************************************/
	void setAreaMaskFlag(const bool p_bAreaMaskFlag) ;

	/************************************************************************
	**概述：
	*		获取侦测区域是否屏蔽标识
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		侦测区域是否屏蔽标识
	**功能：
	*	获取侦测区域是否屏蔽标识
	************************************************************************/
	const bool getAreaMaskFlag() const ;


	/************************************************************************
	**概述：
	*		设置视频格式ID
	**输入：
	*		p_nImageFormatId：视频格式ID
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*	设置视频格式ID
	************************************************************************/
	void setImageFormatId(const int p_nImageFormatId) ;

	/************************************************************************
	**概述：
	*		获取视频格式ID
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		视频格式ID
	**功能：
	*	获取视频格式ID
	************************************************************************/
	const int getImageFormatId() const ;


	/************************************************************************
	**概述：
	*		设置侦测区域帧间隔
	**输入：
	*		p_nFrameInterval：侦测区域帧间隔
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*	设置侦测区域帧间隔
	************************************************************************/
	void setFrameInterval(const int p_nFrameInterval);

	/************************************************************************
	**概述：
	*		获取侦测区域帧间隔
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		侦测区域帧间隔
	**功能：
	*	获取侦测区域帧间隔
	************************************************************************/
	const int getFrameInterval() const ;

	/************************************************************************
	**概述：
	*		设置侦测区域
	**输入：
	*		p_pobjDetectionAreaList：侦测区域
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*	设置侦测区域
	************************************************************************/
	void setDetectionArea(const vector<DetectionArea>& p_pobjDetectionAreaList);

	/************************************************************************
	**概述：
	*		获取侦测区域对象列表
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		侦测区域对象列表
	**功能：
	*      
	**************************************************************************/
	vector<DetectionArea>* getDetectionArea() const;

	/****************************************************************************
	**概述：
	*		赋值函数
	**输入：
	*		p_objMotionDetectionParam：移动侦测规则对象
	**输出：
	*		无
	**返回值：
	*		赋值后的移动侦测规则对象
	**功能：
	*		
	*****************************************************************************/
	MotionDetectionParam& operator = (const MotionDetectionParam &p_objMotionDetectionParam);

	/****************************************************************************
	**概述：
	*		定义“等于”操作符
	**输入：
	*		p_objMotionDetectionParam：MotionDetectionParam类的一个对象的引用。
	**输出：
	*		无
	**返回值：
	*		true ：相等
	*		false：不相等
	**功能：
	*		两个MotionDetectionParam类的对象，所有属性均相等，则说明这两个对象相等，返回true
	*		如果有一个属性不等，则返回false。
	*****************************************************************************/
	//bool operator == (const MotionDetectionParam& p_objMotionDetectionParam) const;

private:

	bool		m_bToUpCheckFlag;										//向左检测（true：检测，false：不检测）
	bool		m_bToDownCheckFlag;										//向下检测（true：检测，false：不检测）
	bool		m_bToLeftCheckFlag;										//向左检测（true：检测，false：不检测）
	bool		m_bToRightCheckFlag;									//向右检测（true：检测，false：不检测）
	bool		m_bAreaMaskFlag;										//屏蔽标识（true：屏蔽，false：检测）
	int			m_nCheckBlockNum;										//检测块数，百分比，指占总移动侦测区域的百分比，百分比越小，侦测灵敏度越高
	int			m_nSensitivity;											//灵敏度，此参数无效，保留使用
	int			m_nImageFormatId;										//视频格式，此参数无效，保留使用
	int			m_nFrameInterval;										//帧间隔
	vector<DetectionArea>			m_objDetectionAreaList;				//移动侦测区域列表

}_PACKED_1_;

/**********************************************************************/
#ifdef PRAGMA_PACK
 	#ifdef WIN32  
		#pragma pack(pop)
	#endif
 #endif
/**********************************************************************/

#endif //_MOTIONDETECTIONPARAM_H_
