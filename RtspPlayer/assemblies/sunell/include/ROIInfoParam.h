#ifndef _ROIINFOPARAM_H_//感兴趣区域
#define _ROIINFOPARAM_H_

#include "SNPlatOS.h"
#include "AreaParam.h"
#include "DomainConst.h"

/**********************************************************************/
//此处用于控制文件编译字节对齐，拷贝时两行注释间内容需一起拷贝，
//结束处的“#ifdef PRAGMA_PACK”部分也要一起拷贝，否则pragma pack入栈出栈不匹配
#if(PRAGMA_PACK_DEFINE != 10000)
	# error Not included "SNPlatOS.h".
#endif
 
#ifdef PRAGMA_PACK
	#ifdef WIN32  
		#pragma pack(push, PRAGMA_PACK_CHAR)
	#endif

	#ifndef WIN32  
		#ifndef _PACKED_1_  
		  
		#define _PACKED_1_ __attribute__((packed, aligned(PRAGMA_PACK_CHAR)))	// for gcc   
		#endif  
	#else  
		#ifndef _PACKED_1_  
		#define _PACKED_1_  
		#endif  
	#endif  
#else  
	#ifndef _PACKED_1_  
	#define _PACKED_1_  
	#endif  
#endif
/**********************************************************************/

class SN_DLL_API ROIInfoParam
{
public:


public:
	ROIInfoParam();
	~ROIInfoParam();

	//拷贝构造函数
	ROIInfoParam(const ROIInfoParam &p_objROIInfoParam);

public:
	/***********************************************************************
	**概述：
	*		设置区域名称。
	**输入：
	*		p_pszName：区域名称
	**输出：
	*		无
	**返回值：
	*		true	：设置成功
	*		false   ：设置失败
	**功能：
	************************************************************************/
	bool setName(const char* p_pszName);

	/************************************************************************
	**概述：
	*		获取区域名称
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		区域名称
	**功能：
	*
	***************************************************************************/
	const char* getName() const;

	/************************************************************************
	**概述：
	*		设置感兴趣区域的流ID
    **输入：
	*		p_nStreamID ：感兴趣区域的流ID
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*    设置感兴趣区域的流ID
	************************************************************************/
	void setStreamID(const int p_nStreamID);
	
	/************************************************************************
	**概述：
	*		获取感兴趣区域的流ID
    **输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		感兴趣区域的流ID
	**功能：
	*     获取感兴趣区域的流ID
	**************************************************************************/
	const int getStreamID() const ;

	/************************************************************************
	**概述：
	*		设置感兴趣区域的索引ID：
	*
	**输入：
	*		p_nIndexID：索引ID（海思平台：
										范围：[0-7]
								安霸平台：
										范围：无限制
								）
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*		
	**************************************************************************/	
	void setIndexID(const int p_nIndexID);

	/************************************************************************
	**概述：
	*		获取感兴趣区域的索引ID
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		int（感兴趣区域的索引ID）
	**功能：
	*     
	**************************************************************************/
	const int getIndexID() const ;


	/************************************************************************
	**概述：
	*		设置感兴趣区域使能标志
	**输入：
	*		p_bEnable:使能标志（true:使能，false:不能）
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*		
	**************************************************************************/
	void setEnableFlag(const bool p_bEnableFlag);

	/************************************************************************
	**概述：
	*		获取感兴趣区域使能标志
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		感兴趣区域使能标志
	**功能：
	*     
	**************************************************************************/
	const bool getEnableFlag() const ;
	
	/************************************************************************
	**概述：
	*		设置感兴趣区域的提升等级
	**输入：
	*		p_nROILevel：提升等级
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*		
	**************************************************************************/	
	void setROILevel(const int p_nROILevel);

	/************************************************************************
	**概述：
	*		获取感兴趣区域的提升等级
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		int（感兴趣区域的提升等级）
	**功能：
	*     
	**************************************************************************/
	const int getROILevel() const ;
	

	/************************************************************************
	**概述：
	*		设置感兴趣区域的区域范围
	**输入：
	*		p_objAreaParam：感兴趣区域的区域范围
	*							
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*		
	**************************************************************************/
	void setAreaParam(const AreaParam& p_objAreaParam);

	/************************************************************************
	**概述：
	*		获取感兴趣区域的区域范围
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		AreaParam（感兴趣区域的区域范围）
	**功能：
	*     
	**************************************************************************/
	const AreaParam& getAreaParam() const;

	/************************************************************************
	**概述：
	*		赋值函数
	**输入：
	*		p_objROIInfoParam ：感兴趣区域对象
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*		
	**************************************************************************/
	ROIInfoParam& operator = (const ROIInfoParam& p_objROIInfoParam);

	bool operator == (const ROIInfoParam& p_objROIInfoParam) const;
private:
	char			m_szName[CONST_MAXLENGTH_DEVICEID + 1];				//名字
	int				m_nStreamID;										//流ID

	int				m_nIndexID;											//索引ID

	bool			m_bROIEnableFlag;									//ROI区域使能标记

	int				m_nROILevel;										//ROI区域的提升等级

	AreaParam		m_objAreaParam;										//ROI区域的区域范围；


	
}_PACKED_1_;

/**********************************************************************/
#ifdef PRAGMA_PACK
 	#ifdef WIN32  
		#pragma pack(pop)
	#endif
 #endif
/**********************************************************************/


#endif //_LOUDHAILERPARAM_H_