#ifndef _SNAPSHOTPARAM_H_
#define _SNAPSHOTPARAM_H_

#include "SNPlatOS.h"

#ifndef byte
typedef unsigned char byte;
#endif

/**********************************************************************/
//此处用于控制文件编译字节对齐，拷贝时两行注释间内容需一起拷贝，
//结束处的“#ifdef PRAGMA_PACK”部分也要一起拷贝，否则pragma pack入栈出栈不匹配
#if(PRAGMA_PACK_DEFINE != 10000)
	# error Not included "SNPlatOS.h".
#endif
 
#ifdef PRAGMA_PACK
	#ifdef WIN32  
		#pragma pack(push, PRAGMA_PACK_CHAR)
	#endif

	#ifndef WIN32  
		#ifndef _PACKED_1_  
		  
		#define _PACKED_1_ __attribute__((packed, aligned(PRAGMA_PACK_CHAR)))	// for gcc   
		#endif  
	#else  
		#ifndef _PACKED_1_  
		#define _PACKED_1_  
		#endif  
	#endif  
#else  
	#ifndef _PACKED_1_  
	#define _PACKED_1_  
	#endif  
#endif
/**********************************************************************/

class SN_DLL_API SnapshotParam
{
public:
	enum PhotoFormat
	{
		PHOTOFORMAT_JPEG = 1,//jpge格式

		PHOTOFORMAT_BMP  = 2 //bmp格式
	};

public:

	SnapshotParam();

	~SnapshotParam();

	SnapshotParam(const SnapshotParam &p_objSnapshotParam);

public:

	/************************************************************************
	**概述：
	*		设置摄像机id
	**输入：
	*		p_nCameraId：摄像机Id
	**输出：
	*		无
	**返回值：
	*		无
	**功能：       
	************************************************************************/
	void setCameraId(const int p_nCameraId);

	/************************************************************************
	**概述：
	*		获取摄像机Id
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		摄像机id
	**功能：       
	************************************************************************/
	const int getCameraId() const;

	/************************************************************************
	**概述：
	*		设置是否允许抓拍
	**输入：
	*		p_bFlag：是否允许抓拍标识
	**输出：
	*		无
	**返回值：
	*		无
	**功能：       
	************************************************************************/
	void setSnapshotEnableFlag(const bool p_bFlag);

	/************************************************************************
	**概述：
	*		获取是否允许抓拍
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		是否允许抓拍标识
	**功能：       
	************************************************************************/
	const bool getSnapshotEnableFlag() const;

	/************************************************************************
	**概述：
	*		设置抓拍质量
	**输入：
	*		p_nQuality：抓拍质量
	**输出：
	*		无
	**返回值：
	*		无
	**功能：       
	************************************************************************/
	void setQuality(const int p_nQuality);

	/************************************************************************
	**概述：
	*		获取抓拍质量
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		抓拍质量
	**功能：       
	************************************************************************/
	const int getQuality() const;

	/************************************************************************
	**概述：
	*		设置图像分辨率
	**输入：
	*		p_nImageFormatId：图像分辨率
	**输出：
	*		无
	**返回值：
	*		无
	**功能：       
	************************************************************************/
	void setImageFormatId(const int p_nImageFormatId);

	/************************************************************************
	**概述：
	*		获取图像分辨率
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		图像分辨率
	**功能：       
	************************************************************************/
	const int getImageFormatId() const;

	/************************************************************************
	**概述：
	*		设置触警抓拍次数
	**输入：
	*		p_nShootTimes：触警抓拍次数
	**输出：
	*		无
	**返回值：
	*		无
	**功能：       
	************************************************************************/
	void setShootTimes(const int p_nShootTimes);

	/************************************************************************
	**概述：
	*		获取触警抓拍次数
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		触警抓拍次数
	**功能：       
	************************************************************************/
	const int getShootTimes() const ;

	/************************************************************************
	**概述：
	*		设置图片格式
	**输入：
	*		p_nPhotoFormat：图片格式
	**输出：
	*		无
	**返回值：
	*		无
	**功能：       
	************************************************************************/
	void setPhotoFormat(const int p_nPhotoFormat);

	/************************************************************************
	**概述：
	*		获取图片格式
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		图片格式
	**功能：       
	************************************************************************/
	const int getPhotoFormat() const;
	

	/************************************************************************
	**概述：
	*		赋值函数
	**输入：
	*		p_objSnapshotParam：快照对象
	**输出：
	*		无
	**返回值：
	*		无
	**功能：       
	************************************************************************/
	SnapshotParam &operator =(const SnapshotParam &p_objSnapshotParam);


	/************************************************************************
	**概述：
	*		定义“==”操作符
	**输入：
	*		p_objSnapshotParam：快照对象
	**输出：
	*		无
	**返回值：
	*		无
	**功能：       
	************************************************************************/
	bool operator == (const SnapshotParam &p_objSnapshotParam) const;

	bool operator < (const SnapshotParam &p_objSnapshotParam) const;

private:

	int		m_nCameraId;			//摄像机id

	bool	m_bSnapshotEnableFlag;	//是否允许抓拍(false：不允许， true：允许)

	int		m_nImageFormatId;		//分辨率
	
	int		m_nQuality;				//抓拍质量

	int		m_nShootTimes;			//每次触警抓拍次数

	int		m_nPhotoFormat;			//图片格式

}_PACKED_1_;

/**********************************************************************/
#ifdef PRAGMA_PACK
 	#ifdef WIN32  
		#pragma pack(pop)
	#endif
 #endif
/**********************************************************************/

#endif //_SNAPSHOTPARAM_H_
