#ifndef _BLINDABILITY_V2_H_
#define _BLINDABILITY_V2_H_
#include "SNPlatOS.h"
#include "MosaicParam.h"
#include "RGBColor.h"
#include <vector>
/**********************************************************************/
//此处用于控制文件编译字节对齐，拷贝时两行注释间内容需一起拷贝，
//结束处的“#ifdef PRAGMA_PACK”部分也要一起拷贝，否则pragma pack入栈出栈不匹配
#if(PRAGMA_PACK_DEFINE != 10000)
	# error Not included "SNPlatOS.h".
#endif
 
#ifdef PRAGMA_PACK
	#ifdef WIN32  
		#pragma pack(push, PRAGMA_PACK_CHAR)
	#endif

	#ifndef WIN32  
		#ifndef _PACKED_1_  
		  
		#define _PACKED_1_ __attribute__((packed, aligned(PRAGMA_PACK_CHAR)))	// for gcc   
		#endif  
	#else  
		#ifndef _PACKED_1_  
		#define _PACKED_1_  
		#endif  
	#endif  
#else  
	#ifndef _PACKED_1_  
	#define _PACKED_1_  
	#endif  
#endif
/**********************************************************************/

class SN_DLL_API BlindAbilityV2
{

public:
	BlindAbilityV2();
	~BlindAbilityV2();
	/************************************************************************
	**概述：设置支持遮挡区域块数量
	*
	**输入：
	*		p_nMaxBlindAreaNum   遮挡块数量
	**输出：
	*		无
	**功能：       
	*		设置支持遮挡区域数量
	************************************************************************/
	void setMaxBlindAreaNum(const int &p_nMaxBlindAreaNum);

	/************************************************************************
	**概述：获取支持遮挡区域块数量
	*
	**输入：
	*		无
	**返回：
	*		挡区域数量
	**功能：       
	*		获取支持遮挡区域数量
	************************************************************************/
	const int getMaxBlindAreaNum() const;

	/************************************************************************
	**概述：设置遮挡区域面积占源分辨率百分比值
	*
	**输入：
	*		p_nBlindAreaRate   百分比值
	**输出：
	*		无
	**功能：       
	*		设置遮挡区域面积占源分辨率百分比值
	************************************************************************/
	void setBlindAreaRate(const int &p_nBlindAreaRate);	

	/************************************************************************
	**概述：获取遮挡区域面积占源分辨率百分比值
	*
	**输入：
	*		无
	**返回：
	*		区域面积占源分辨率百分比值
	**功能：       
	*		获取遮挡区域面积占源分辨率百分比值
	************************************************************************/
	const int getBlindAreaRate() const;

	/************************************************************************
	**概述：设置隐私遮蔽支持的类型列表
	*
	**输入：
	*		p_nList   类型列表
	**输出：
	*		无
	**功能：       
	*		设置隐私遮蔽支持的类型列表
	************************************************************************/
	void setTypeList(std::vector<int> &p_nList);	

	/************************************************************************
	**概述：获取隐私遮蔽支持的类型列表
	*
	**输入：
	*		无
	**返回：
	*		支持的类型列表
	**功能：       
	*		获取隐私遮蔽支持的类型列表
	************************************************************************/
	const std::vector<int> getTypeList() const;

	/************************************************************************
	**概述：设置隐私遮蔽支持的颜色列表
	*
	**输入：
	*		p_nList   颜色列表
	**输出：
	*		无
	**功能：       
	*		设置隐私遮蔽支持的颜色列表
	************************************************************************/
	void setRGBColorList(std::vector<RGBColor> &p_nList);	

	/************************************************************************
	**概述：获取隐私遮蔽支持的颜色列表
	*
	**输入：
	*		无
	**返回：
	*		支持的颜色列表 （如果RGBColor的颜色分量为-1代表支持所有颜色）
	**功能：       
	*		获取隐私遮蔽支持的颜色列表
	************************************************************************/
	const std::vector<RGBColor> getRGBColorList() const;

	/************************************************************************
	**概述：设置透明度的支持列表
	*
	**输入：
	*		p_List   透明度列表
	**输出：
	*		无
	**功能：       
	*		设置隐私遮蔽支持的透明度列表
	************************************************************************/
	void setAlphaList(std::vector<int> &p_nList);	

	/************************************************************************
	**概述：获取透明度的支持列表
	*
	**输入：
	*		无
	**返回：
	*		支持的透明度列表
	**功能：       
	*		获取透明度的支持列表
	************************************************************************/
	const std::vector<int> getAlphaList() const;

		/************************************************************************
	**概述：设置马赛克能力列表
	*
	**输入：
	*		p_List   马赛克能力列表
	**输出：
	*		无
	**功能：       
	*		设置马赛克能力列表
	************************************************************************/
	void setMosaicParamList(std::vector<MosaicParam> &p_nList);	

	/************************************************************************
	**概述：获取马赛克能力列表
	*
	**输入：
	*		无
	**返回：
	*		支持的马赛克能力列表
	**功能：       
	*		获取马赛克能力的支持列表
	************************************************************************/
	const std::vector<MosaicParam> getMosaicParamList() const;

private:
	int m_nMaxBlindAreaNum;	     //支持最大的遮挡区域数目
	int m_nBlindAreaRate;			//遮挡区域面积占源分辨率百分比
	std::vector<int> m_nTypeList;   //支持的隐私遮蔽类型列表
	std::vector<int> m_nAlphaList;  //支持的透明度列表
	std::vector<RGBColor> m_RGBColorList; //颜色支持列表
	std::vector<MosaicParam> m_MosaicParamList;  //支持的马赛克大小列表
}_PACKED_1_;

/**********************************************************************/
#ifdef PRAGMA_PACK
 	#ifdef WIN32  
		#pragma pack(pop)
	#endif
 #endif
/**********************************************************************/


#endif // _BLINDABILITY_V2_H_