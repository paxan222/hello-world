#ifndef _AVSTREAMPARAM_H_
#define _AVSTREAMPARAM_H_

#include "SNPlatOS.h"
#include "DomainConst.h"

/**********************************************************************/
//此处用于控制文件编译字节对齐，拷贝时两行注释间内容需一起拷贝，
//结束处的“#ifdef PRAGMA_PACK”部分也要一起拷贝，否则pragma pack入栈出栈不匹配
#if(PRAGMA_PACK_DEFINE != 10000)
	# error Not included "SNPlatOS.h".
#endif
 
#ifdef PRAGMA_PACK
	#ifdef WIN32  
		#pragma pack(push, PRAGMA_PACK_CHAR)
	#endif

	#ifndef WIN32  
		#ifndef _PACKED_1_  
		  
		#define _PACKED_1_ __attribute__((packed, aligned(PRAGMA_PACK_CHAR)))	// for gcc   
		#endif  
	#else  
		#ifndef _PACKED_1_  
		#define _PACKED_1_  
		#endif  
	#endif  
#else  
	#ifndef _PACKED_1_  
	#define _PACKED_1_  
	#endif  
#endif
/**********************************************************************/

class SN_DLL_API AVStreamParam
{
public:
	enum IFrameIntervalUnit
	{
		IFrameIntervalUnit_Seconds = 1,	//单位为秒
		IFrameIntervalUnit_Frames = 2	//单位为帧
	};

public:
	AVStreamParam(void);
	~AVStreamParam(void);

	AVStreamParam(const AVStreamParam &p_AVStreamParam);

public:
	/***********************************************************************
	**概述：
	*		设置摄像机编号
	**输入：
	*		p_nCameraId：摄像机编号
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	************************************************************************/
	void setCameraId(int p_nCameraId);

	/************************************************************************
	**概述：
	*		获取摄像机编号
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		摄像机编号
	**功能：
	*
	***************************************************************************/
	int getCameraId() const;


	/***********************************************************************
	**概述：
	*		设置流ID
	**输入：
	*		p_nStreamId：流ID
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	************************************************************************/
	void setStreamId(int p_nStreamId);


	/************************************************************************
	**概述：
	*		获取流ID
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		流ID
	**功能：
	*
	***************************************************************************/
	int getStreamId() const;


	/***********************************************************************
	**概述：
	*		设置流名称
	**输入：
	*		p_pszStreamName：流名称
	**输出：
	*		无
	**返回值：
	*		true ：设置成功
	*		false：设置失败
	**功能：
	************************************************************************/
	bool setStreamName(const char*  p_pszStreamName);

	/************************************************************************
	**概述：
	*		获取流名称
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		流名称
	**功能：
	*
	***************************************************************************/
	const char* getStreamName() const;


	/***********************************************************************
	**概述：
	*		设置视频高度
	**输入：
	*		p_nVideoHeight：视频高度
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	************************************************************************/
	void setVideoHeight(int p_nVideoHeight);

	/************************************************************************
	**概述：
	*		获取视频高度
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		视频高度
	**功能：
	*
	***************************************************************************/
	int getVideoHeight() const;


	/***********************************************************************
	**概述：
	*		设置视频宽度
	**输入：
	*		p_nVideoWidth：视频宽度
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	************************************************************************/
	void setVideoWidth(int p_nVideoWidth);

	/************************************************************************
	**概述：
	*		获取视频宽度
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		视频宽度
	**功能：
	*
	***************************************************************************/
	int getVideoWidth() const;


	/***********************************************************************
	**概述：
	*		设置帧率
	**输入：
	*		p_nFrameRate：帧率
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	************************************************************************/
	void setFrameRate(int p_nFrameRate);

	/************************************************************************
	**概述：
	*		获取帧率
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		帧率
	**功能：
	*
	***************************************************************************/
	int getFrameRate() const;


	/***********************************************************************
	**概述：
	*		设置码率类型
	**输入：
	*		p_nBitRate：码率类型
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	************************************************************************/
	void setBitRateType(int p_nBitRate);

	/************************************************************************
	**概述：
	*		获取码率类型
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		码率类型
	**功能：
	*
	***************************************************************************/
	int getBitRateType() const;


	/***********************************************************************
	**概述：
	*		设置码率
	**输入：
	*		p_nBitRate：码率
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	************************************************************************/
	void setBitRate(int p_nBitRate);

	/************************************************************************
	**概述：
	*		获取码率
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		码率
	**功能：
	*
	***************************************************************************/
	int getBitRate() const;


	/***********************************************************************
	**概述：
	*		设置视频质量
	**输入：
	*		p_nQuality：视频质量
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	************************************************************************/
	void setQuality(int p_nQuality);

	/************************************************************************
	**概述：
	*		获取视频质量
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		视频质量
	**功能：
	*
	***************************************************************************/
	int getQuality() const;


	/***********************************************************************
	**概述：
	*		设置I帧间隔
	**输入：
	*		p_nIFrameInterval：I帧间隔
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	************************************************************************/
	void setIFrameInterval(int p_nIFrameInterval);

	/************************************************************************
	**概述：
	*		获取I帧间隔
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		I帧间隔
	**功能：
	*
	***************************************************************************/
	int getIFrameInterval() const;

	/************************************************************************
	**概述：
	*		设置I帧间隔单位
	**输入：
	*		I帧间隔单位
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*
	***************************************************************************/
	void setIFrameIntervalUnit(int p_nUnit);

	/************************************************************************
	**概述：
	*		获取I帧间隔单位
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		I帧间隔
	**功能：
	*
	***************************************************************************/
	int getIFrameIntervalUnit() const;

	/***********************************************************************
	**概述：
	*		设置视频编码类型
	**输入：
	*		p_nVideoEncoderType：视频编码类型
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	************************************************************************/
	void setVideoEncoderType(int p_nVideoEncoderType);

	/************************************************************************
	**概述：
	*		获取视频编码类型
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		视频编码类型
	**功能：
	*
	***************************************************************************/
	int getVideoEncoderType() const;


	/***********************************************************************
	**概述：
	*		设置音频编码类型
	**输入：
	*		p_nAudioEncoderType：音频编码类型
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	************************************************************************/
	void setAudioEncoderType(int p_nAudioEncoderType);

	/************************************************************************
	**概述：
	*		获取音频编码类型
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		音频编码类型
	**功能：
	*
	***************************************************************************/
	int getAudioEncoderType() const;
	
	/************************************************************************
	**概述：
	*		赋值函数
	**输入：
	*		p_objAVStreamParam ：流参数对象
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*
	************************************************************************/
	AVStreamParam& operator = (const AVStreamParam &p_objAVStreamParam);

private:
	int		m_nCameraId;											//摄像机ID
	int		m_nStreamId;											//码流ID
	char	m_szStreamName[CONST_MAXLENGTH_AVSREAM_NAME + 1];		//码流名称
	int		m_nVideoHeight;											//高度
	int		m_nVideoWidth;											//宽度
	int		m_nFrameRate;											//帧率
	int		m_nBitRateType;											//码率类型
	int		m_nBitRate;												//码率
	int		m_nQuality;												//视频质量值
	int		m_nIFrameInterval;										//I帧步长
	int		m_nIFrameIntervalUnit;									//I帧间隔单位
	int		m_nVideoEncoderType;									//视频编码类型
	int		m_nAudioEncoderType;									//音频编码类型
}_PACKED_1_;

/**********************************************************************/
#ifdef PRAGMA_PACK
 	#ifdef WIN32  
		#pragma pack(pop)
	#endif
 #endif
/**********************************************************************/

#endif //_ENCODER_ABILITY_
