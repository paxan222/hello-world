#ifndef _MOTIONDETECTIONEX_ABILITY_H_
#define _MOTIONDETECTIONEX_ABILITY_H_

#include "SNPlatOS.h"
#include <vector>
using namespace std;


/**********************************************************************/
//此处用于控制文件编译字节对齐，拷贝时两行注释间内容需一起拷贝，
//结束处的“#ifdef PRAGMA_PACK”部分也要一起拷贝，否则pragma pack入栈出栈不匹配
#if(PRAGMA_PACK_DEFINE != 10000)
	# error Not included "SNPlatOS.h".
#endif
 
#ifdef PRAGMA_PACK
	#ifdef WIN32  
		#pragma pack(push, PRAGMA_PACK_CHAR)
	#endif

	#ifndef WIN32  
		#ifndef _PACKED_1_  
		  
		#define _PACKED_1_ __attribute__((packed, aligned(PRAGMA_PACK_CHAR)))	// for gcc   
		#endif  
	#else  
		#ifndef _PACKED_1_  
		#define _PACKED_1_  
		#endif  
	#endif  
#else  
	#ifndef _PACKED_1_  
	#define _PACKED_1_  
	#endif  
#endif
/**********************************************************************/

/************************************************************************
*	概述：移动侦测能力信息类
*	包含：视频格式,最大灵敏度,最小帧间隔
************************************************************************/

class SN_DLL_API MotionDetectionExAbility
{
public:
	MotionDetectionExAbility(void);
	~MotionDetectionExAbility(void);

public:

	/****************************************************************************
	**概述：
	*		设置最大灵敏度
	**输入：
	*		p_nMaxSensitivity：最大灵敏度
	**输出：
	*		无
	**返回值：
	*		无 
	**功能：
	*		
	*******************************************************************************/
	void setMaxSensitivity(const int p_nMaxSensitivity);

	/****************************************************************************
	**概述：
	*		获得最大灵敏度
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		最大灵敏度
	**功能：
	*
	*******************************************************************************/
	const int getMaxSensitivity() const;

	/****************************************************************************
	**概述：
	*		设置最小灵敏度
	**输入：
	*		p_nMinSensitivity：最小灵敏度
	**输出：
	*		无
	**返回值：
	*		无 
	**功能：
	*		
	*******************************************************************************/
	void setMinSensitivity(const int p_nMinSensitivity);

	/****************************************************************************
	**概述：
	*		获得最小灵敏度
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		最大灵敏度
	**功能：
	*
	*******************************************************************************/
	const int getMinSensitivity() const;

	/****************************************************************************
	**概述：
	*		设置缺省灵敏度
	**输入：
	*		p_nDefualSensitivity：缺省灵敏度
	**输出：
	*		无
	**返回值：
	*		无 
	**功能：
	*		
	*******************************************************************************/
	void setDefualSensitivity(const int p_nDefualSensitivity);

	/****************************************************************************
	**概述：
	*		获得缺省灵敏度
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		缺省灵敏度
	**功能：
	*
	*******************************************************************************/
	const int getDefualSensitivity() const;

	/****************************************************************************
	**概述：
	*		设置默认区域宽块数
	**输入：
	*		p_nDefualWidthCellNumber：默认区域宽块数
	**输出：
	*		无
	**返回值：
	*		无 
	**功能：
	*		
	*******************************************************************************/
	void setDefualWidthCellNumber(const int p_nDefualWidthCellNumber);

	/****************************************************************************
	**概述：
	*		获得默认区域宽块数
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		默认区域宽块数
	**功能：
	*
	*******************************************************************************/
	const int getDefualWidthCellNumber() const;

	/****************************************************************************
	**概述：
	*		设置默认区域高块数
	**输入：
	*		p_nDefualHighCellNumber：默认区域宽块数
	**输出：
	*		无
	**返回值：
	*		无 
	**功能：
	*		
	*******************************************************************************/
	void setDefualHighCellNumber(const int p_nDefualHighCellNumber);

	/****************************************************************************
	**概述：
	*		获得默认区域高块数
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		默认区域宽块数
	**功能：
	*
	*******************************************************************************/
	const int getDefualHighCellNumber() const;

	/****************************************************************************
	**概述：
	*		设置最大区域宽块数
	**输入：
	*		p_nMaxWidthCellNumber：最大区域宽块数
	**输出：
	*		无
	**返回值：
	*		无 
	**功能：
	*		
	*******************************************************************************/
	void setMaxWidthCellNumber(const int p_nMaxWidthCellNumber);

	/****************************************************************************
	**概述：
	*		获得最大区域宽块数
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		最大区域宽块数
	**功能：
	*
	*******************************************************************************/
	const int getMaxWidthCellNumber() const;

	/****************************************************************************
	**概述：
	*		设置最小区域宽块数
	**输入：
	*		p_nMinWidthCellNumber：最小区域宽块数
	**输出：
	*		无
	**返回值：
	*		无 
	**功能：
	*		
	*******************************************************************************/
	void setMinWidthCellNumber(const int p_nMinWidthCellNumber);

	/****************************************************************************
	**概述：
	*		获得最小区域宽块数
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		最小区域宽块数
	**功能：
	*
	*******************************************************************************/
	const int getMinWidthCellNumber() const;

	/****************************************************************************
	**概述：
	*		设置最大区域高块数
	**输入：
	*		p_nMaxHighCellNumber：最大区域高块数
	**输出：
	*		无
	**返回值：
	*		无 
	**功能：
	*		
	*******************************************************************************/
	void setMaxHighCellNumber(const int p_nMaxHighCellNumber);

	/****************************************************************************
	**概述：
	*		获得最大区域高块数
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		最大区域高块数
	**功能：
	*
	*******************************************************************************/
	const int getMaxHighCellNumber() const;

	/****************************************************************************
	**概述：
	*		设置最小区域高块数
	**输入：
	*		p_nMinHighCellNumber：最小区域高块数
	**输出：
	*		无
	**返回值：
	*		无 
	**功能：
	*		
	*******************************************************************************/
	void setMinHighCellNumber(const int p_nMinHighCellNumber);

	/****************************************************************************
	**概述：
	*		获得最小区域高块数
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		最小区域高块数
	**功能：
	*
	*******************************************************************************/
	const int getMinHighCellNumber() const;

private:
	int			m_nMaxSensitivity;				//最大灵敏度
	int			m_nMinSensitivity;				//最小灵敏度
	int			m_nDefualSensitivity;			//默认灵敏度
	int			m_nDefualWidthCellNumber;		//默认区域宽块数
	int			m_nDefualHighCellNumber;		//默认区域高块数
	int			m_nMaxWidthCellNumber;			//最大区域宽块数
	int			m_nMinWidthCellNumber;			//最小区域宽块数
	int			m_nMaxHighCellNumber;			//最大区域高块数
	int			m_nMinHighCellNumber;			//最小区域高块数

}_PACKED_1_;

/**********************************************************************/
#ifdef PRAGMA_PACK
 	#ifdef WIN32  
		#pragma pack(pop)
	#endif
 #endif
/**********************************************************************/


#endif //_MOTIONDETECTIONEX_ABILITY_H_
