#ifndef _UPDATEPARAM_H_
#define _UPDATEPARAM_H_


#include "DomainConst.h"
#include "const.h"
#include "SNPlatOS.h"

/**********************************************************************/
//此处用于控制文件编译字节对齐，拷贝时两行注释间内容需一起拷贝，
//结束处的“#ifdef PRAGMA_PACK”部分也要一起拷贝，否则pragma pack入栈出栈不匹配
#if(PRAGMA_PACK_DEFINE != 10000)
	# error Not included "SNPlatOS.h".
#endif
 
#ifdef PRAGMA_PACK
	#ifdef WIN32  
		#pragma pack(push, PRAGMA_PACK_CHAR)
	#endif

	#ifndef WIN32  
		#ifndef _PACKED_1_  
		  
		#define _PACKED_1_ __attribute__((packed, aligned(PRAGMA_PACK_CHAR)))	// for gcc   
		#endif  
	#else  
		#ifndef _PACKED_1_  
		#define _PACKED_1_  
		#endif  
	#endif  
#else  
	#ifndef _PACKED_1_  
	#define _PACKED_1_  
	#endif  
#endif
/**********************************************************************/

class SN_DLL_API UpdateParam
{
public:
	UpdateParam();

	~UpdateParam();

	//拷贝构造函数
	UpdateParam(const UpdateParam& p_objUpdateParam);

public:

	/************************************************************************
	** 概述：
	*		设置IP协议类型
	**输入：
	*		p_nIPProtoVer：IP协议类型
	**输出：
	*	  无
	**返回值：
	*	  无
	************************************************************************/
	void setIPProtoVer(const int p_nIPProtoVer);

	/************************************************************************
	**概述：
	*		获取IP协议类型
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		IP协议类型
	************************************************************************/
	const int getIPProtoVer()  const;

	/************************************************************************
	**概述：
	*		设置是否允许升级
	**输入：
	*		p_bFlag：是否允许升级(true：允许，false：不允许）
	**输出：
	*		无
	**返回值：
	*		无
	**功能：       
	************************************************************************/
	void setUpdateEnableFlag(const bool p_bFlag);

	/************************************************************************
	*概述：
	*		获取是否允许升级
	*输入：
	*		无
	*输出：
	*		无
	*返回值：
	*		是否允许升级
	*功能：       
	*************************************************************************/
	const bool getUpdateEnableFlag() const;


	/************************************************************************
	**概述：
	*		设置升级服务器IP
	**输入：
	*		p_pszUpdateServerIP：升级服务器IP
	**输出：
	*		无
	**返回值：
	*		无
	**功能：       
	************************************************************************/
	bool setUpdateServerIP(const char* p_pszUpdateServerIP);

	/************************************************************************
	*概述：
	*		获取升级服务器IP
	*输入：
	*		无
	*输出：
	*		无
	*返回值：
	*		升级服务器IP
	*功能：       
	*************************************************************************/
	const char* getUpdateServerIP() const;


	/************************************************************************
	**概述：
	*		设置升级服务器端口
	**输入：
	*		p_nUpdateServerPort：升级服务器端口
	**输出：
	*		无
	**返回值：
	*		无
	**功能：       
	************************************************************************/
	bool setUpdateServerPort(unsigned short p_nUpdateServerPort);

	/************************************************************************
	*概述：
	*		获取升级服务器端口
	*输入：
	*		无
	*输出：
	*		无
	*返回值：
	*		升级服务器端口
	*功能：       
	*************************************************************************/
	unsigned short getUpdateServerPort() const;

	/************************************************************************
	**概述：
	*		设置升级周期
	**输入：
	*		p_nUpdatePeriod：升级周期，以分为单位
	**输出：
	*		无
	**返回值：
	*		无
	**功能：       
	************************************************************************/
	void setUpdatePeriod(const int p_nUpdatePeriod);

	/************************************************************************
	*概述：
	*		获取升级周期
	*输入：
	*		无
	*输出：
	*		无
	*返回值：
	*		升级周期
	*功能：       
	*************************************************************************/
	const int getUpdatePeriod() const;


	/************************************************************************
	**概述：
	*		所有成员恢复成初始值
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		无
	**功能：       
	************************************************************************/
	void reset();


	/****************************************************************************
	**概述：
	*			赋值函数
	**输入：
	*		p_pobjUpdateParam：升级参数对象
	**输出：
	*		无
	**返回值：
	*		无 
	** 功能：
	*		
	*****************************************************************************/
	UpdateParam & operator =(const UpdateParam& p_pobjUpdateParam);


private:

	bool			m_bUpdateEnableFlag;							//是否允许升级标识(true：允许，false：不允许)

	char			m_szUpdateServerIP[CONST_MAXLENGTH_IP + 1];		//升级服务器IP

	unsigned short	m_nUpdateServerPort;							//升级服务器端口

	int				m_nUpdatePeriod;								//升级的周期，以分为单位

	int				m_nIPProtoVer;									//IP协议类型
}_PACKED_1_;

/**********************************************************************/
#ifdef PRAGMA_PACK
 	#ifdef WIN32  
		#pragma pack(pop)
	#endif
 #endif
/**********************************************************************/

#endif //_UPDATEPARAM_H_
