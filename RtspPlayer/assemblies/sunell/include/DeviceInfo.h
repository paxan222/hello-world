#ifndef _DEVICEINFO_H_
#define _DEVICEINFO_H_


#include "const.h"
#include "DomainConst.h"
#include "InetAddr.h"
#include "DeviceType.h"
#include "SNPlatOS.h"

/**********************************************************************/
//此处用于控制文件编译字节对齐，拷贝时两行注释间内容需一起拷贝，
//结束处的“#ifdef PRAGMA_PACK”部分也要一起拷贝，否则pragma pack入栈出栈不匹配
#if(PRAGMA_PACK_DEFINE != 10000)
	# error Not included "SNPlatOS.h".
#endif
 
#ifdef PRAGMA_PACK
	#ifdef WIN32  
		#pragma pack(push, PRAGMA_PACK_CHAR)
	#endif

	#ifndef WIN32  
		#ifndef _PACKED_1_  
		  
		#define _PACKED_1_ __attribute__((packed, aligned(PRAGMA_PACK_CHAR)))	// for gcc   
		#endif  
	#else  
		#ifndef _PACKED_1_  
		#define _PACKED_1_  
		#endif  
	#endif  
#else  
	#ifndef _PACKED_1_  
	#define _PACKED_1_  
	#endif  
#endif
/**********************************************************************/

class SN_DLL_API DeviceInfo
{

public:

	DeviceInfo(void);

	DeviceInfo(const DeviceInfo &p_objDeviceInfo);

	~DeviceInfo(void);
	
public:

	/************************************************************************
	**概述：
	*		设置设备ID
	**输入：
	*		p_pszDeviceID：设备ID,网络视频设备的唯一标识符
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*		
	************************************************************************/
	void setDeviceID(const char* p_pszDeviceID);

	/************************************************************************
	**概述：
	*		获得设备ID
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		设备ID
	**功能：
	*		
	**************************************************************************/
	const char* getDeviceID() const;

	/************************************************************************
	**概述：
	*		设置设备名称
	**输入：
	*		p_pszDeviceName: 设备名称
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*		
	************************************************************************/
	void setDeviceName(const char* p_pszDeviceName);

	/************************************************************************
	**概述：
	*		获得设备名称
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		设备名称
	**功能：
	*		
	**************************************************************************/
	const char* getDeviceName() const;

	/************************************************************************
	**概述：
	*		设置设备类型
	**输入：
	*		p_nDeviceType: 设备类型
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*		
	************************************************************************/
	void setDeviceType(const int p_nDeviceType);

	/************************************************************************
	**概述：
	*		获得设备类型
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		设备类型
	**功能：
	*		
	**************************************************************************/
	const int getDeviceType() const;


	/************************************************************************
	**概述：
	*		设置设备的网络访问地址
	**输入：
	*		p_objAddr: 设备的网络访问地址
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*		
	************************************************************************/
	void setDeviceAddr(const InetAddr& p_objAddr);

	/************************************************************************
	**概述：
	*		获取设备的网络访问地址
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		设备的网络访问地址
	**功能：
	*		
	**************************************************************************/
	const InetAddr & getDeviceAddr() const;

	/************************************************************************
	**概述：
	*		设置登录设备的用户ID（用户名）
	**输入：
	*		p_pszUserID: 登录设备的用户ID
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*		设置登录设备的用户ID
	************************************************************************/
	void setUserID(const char* p_pszUserID);

	/************************************************************************
	**概述：
	*		获取登录设备的用户ID（用户名）
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		登录设备的用户ID
	**功能：
	*		获取登录设备的用户ID
	**************************************************************************/
	const char* getUserID() const;

	/************************************************************************
	**概述：
	*		设置设备的登录密码
	**输入：
	*		p_pszPassword: 设备的登录密码
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*		设置设备的登录密码
	************************************************************************/
	void setPassword(const char* p_pszPassword);
	
	/************************************************************************
	**概述：
	*		获取设备的登录密码
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		设备的登录密码
	**功能：
	*		获取设备的登录密码
	**************************************************************************/
	const char* getPassword() const;

	/************************************************************************
	**概述：
	*		对象自拷贝
	**输入：
	*		p_objDeviceInfo: 设备信息对象
	**输出：
	*		无
	**返回值：
	*		无
	**功能：
	*		对象自拷贝
	************************************************************************/
	DeviceInfo &operator =(const DeviceInfo& p_objDeviceInfo);

private:

	InetAddr	m_objInetAddr;										//设备的网络地址
	
	char		m_szUserID[CONST_MAXLENGTH_USERID + 1];				//登陆设备的用户ID

	char		m_szPassword[CONST_MAXLENGTH_PASSWORD + 1];			//登陆设备的密码
	
	char		m_szDeviceID[CONST_MAXLENGTH_DEVICEID + 1];			//设备ID

	char        m_szDeviceName[CONST_MAXLENGTH_DEVICENAME + 1];		//设备名称

	int			m_nDeviceType;										//设备类型

}_PACKED_1_;

/**********************************************************************/
#ifdef PRAGMA_PACK
 	#ifdef WIN32  
		#pragma pack(pop)
	#endif
 #endif
/**********************************************************************/

#endif //_DEVICEINFO_H_
