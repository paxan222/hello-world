#ifndef _ADVANCED_ABILITY_H_
#define _ADVANCED_ABILITY_H_

#include "SNPlatOS.h"
#include "DomainConst.h"
#include <string>

/**********************************************************************/
//此处用于控制文件编译字节对齐，拷贝时两行注释间内容需一起拷贝，
//结束处的“#ifdef PRAGMA_PACK”部分也要一起拷贝，否则pragma pack入栈出栈不匹配
#if(PRAGMA_PACK_DEFINE != 10000)
	# error Not included "SNPlatOS.h".
#endif
 
#ifdef PRAGMA_PACK
	#ifdef WIN32  
		#pragma pack(push, PRAGMA_PACK_CHAR)
	#endif

	#ifndef WIN32  
		#ifndef _PACKED_1_  
		  
		#define _PACKED_1_ __attribute__((packed, aligned(PRAGMA_PACK_CHAR)))	// for gcc   
		#endif  
	#else  
		#ifndef _PACKED_1_  
		#define _PACKED_1_  
		#endif  
	#endif  
#else  
	#ifndef _PACKED_1_  
	#define _PACKED_1_  
	#endif  
#endif
/**********************************************************************/

class SN_DLL_API AdvancedAbility
{
public:
	AdvancedAbility(void);
	~AdvancedAbility(void);
	AdvancedAbility& operator=(const AdvancedAbility& p_objAdvancedAbility);
    /***********************************************************************
	*	概述：设置提供高级参数（Advanced）功能的智能库的ID
	*	输入：
	*		p_nLibId ：智能库ID
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入的智能库ID需要跟能力列表的库ID匹配，不然将视为非法的ID，
	*       功能无法正常启用。
	************************************************************************/
	void setLibId(const int p_nLibId);

    /***********************************************************************
	*	概述：获取提供高级参数（Advanced）功能的智能库的ID
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		const int : 当前提供该功能的智能库ID
	*   功能正文：
	*       返回的库ID是当前设备提供该智能分析功能的库ID
	************************************************************************/
	const int getLibId() const;

    /***********************************************************************
	*	概述：设置高级参数（Advanced）能力是否支持
	*	输入：
	*		p_bEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setEnable(const bool p_bEnable);

    /***********************************************************************
	*	概述：获取高级参数（Advanced）能力是否支持
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool : 如果支持，返回true；
	*              如果不支持，返回false。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getEnable() const;

    /***********************************************************************
	*	概述：设置室内/室外的能力是否支持
	*	输入：
	*		p_bSceneEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setSceneEnable(const bool p_bSceneEnable);

    /***********************************************************************
	*	概述：获取室内/室外的能力是否支持
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool ：返回true，支持；
	*              返回false，不支持。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getSceneEnable() const;

    /***********************************************************************
	*	概述：设置室内/室外的参数值的最小值
	*	输入：
	*		p_nSceneMin ：室内/室外的参数值的最小值
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	void setSceneMin(const int p_nSceneMin);

    /***********************************************************************
	*	概述：获取室内/室外的参数值的最小值
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 室内/室外的参数值的最小值
	*   功能正文：
	*       无
	************************************************************************/
	const int getSceneMin() const;

    /***********************************************************************
	*	概述：设置室内/室外的参数值的最大值
	*	输入：
	*		p_nSceneMax ：室内/室外的参数值的最大值
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	void setSceneMax(const int p_nSceneMax);

    /***********************************************************************
	*	概述：获取室内/室外的参数值的最大值
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 室内/室外的参数值的最大值
	*   功能正文：
	*       无
	************************************************************************/
	const int getSceneMax() const;

    /***********************************************************************
	*	概述：设置室内/室外的参数值的单位
	*	输入：
	*		p_pSceneUnit ：室内/室外的参数值的单位
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	bool setSceneUnit(const char* p_pSceneUnit);

    /***********************************************************************
	*	概述：获取室内/室外的参数值的单位
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		string : 室内/室外的参数值的单位
	*   功能正文：
	*       无
	************************************************************************/
	const char* getSceneUnit() const;

    /***********************************************************************
	*	概述：设置安装高度的能力是否支持
	*	输入：
	*		p_bHightEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setHightEnable(const bool p_bHightEnable);

    /***********************************************************************
	*	概述：获取安装高度的能力是否支持
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool ：返回true，支持；
	*              返回false，不支持。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getHightEnable() const;

    /***********************************************************************
	*	概述：设置安装高度的单位
	*	输入：
	*		p_pHightUnit ：安装高度的单位
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	bool setHightUnit(const char* p_pHightUnit);

    /***********************************************************************
	*	概述：获取安装高度的单位
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		string ：安装高度的单位
	*   功能正文：
	*       无
	************************************************************************/
	const char* getHightUnit() const;

    /***********************************************************************
	*	概述：设置安装角度的能力是否支持
	*	输入：
	*		p_bAngleEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setAngleEnable(const bool p_bAngleEnable);

    /***********************************************************************
	*	概述：获取安装角度的能力是否支持
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool ：返回true，支持；
	*              返回false，不支持。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getAngleEnable() const;

    /***********************************************************************
	*	概述：设置安装角度的单位
	*	输入：
	*		p_pAngleUnit ：安装角度的单位
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	bool setAngleUnit(const char* p_pAngleUnit);

    /***********************************************************************
	*	概述：获取安装角度的单位
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		string ：安装角度的单位
	*   功能正文：
	*       无
	************************************************************************/
	const char* getAngleUnit() const;

    /***********************************************************************
	*	概述：设置摄像机镜头视场角FOV的能力是否支持
	*	输入：
	*		p_bFOVEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setFOVEnable(const bool p_bFOVEnable);

    /***********************************************************************
	*	概述：获取摄像机镜头视场角FOV的能力是否支持
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool ：返回true，支持；
	*              返回false，不支持。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getFOVEnable() const;

    /***********************************************************************
	*	概述：设置摄像机镜头视场角FOV的单位
	*	输入：
	*		p_pFOVUnit ：安装角度的单位
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	bool setFOVUnit(const char* p_pFOVUnit);

    /***********************************************************************
	*	概述：获取摄像机镜头视场角FOV的单位
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		string ：摄像机镜头视场角FOV的单位
	*   功能正文：
	*       无
	************************************************************************/
	const char* getFOVUnit() const;

    /***********************************************************************
	*	概述：设置摄像机像素与实体物体长度的转换的能力是否支持
	*	输入：
	*		p_bPixelToRealSizeEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setPixelToRealSizeEnable(const bool p_bPixelToRealSizeEnable);

    /***********************************************************************
	*	概述：获取摄像机像素与实体物体长度的转换的能力是否支持
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool ：返回true，支持；
	*              返回false，不支持。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getPixelToRealSizeEnable() const;

    /***********************************************************************
	*	概述：设置物体实际长度的能力是否支持
	*	输入：
	*		p_bRealSizeEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setRealSizeEnable(const bool p_bRealSizeEnable);

    /***********************************************************************
	*	概述：获取物体实际长度的能力是否支持
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool ：返回true，支持；
	*              返回false，不支持。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getRealSizeEnable() const;

    /***********************************************************************
	*	概述：设置物体实际长度的单位
	*	输入：
	*		p_bRealSizeUnit ：物体实际长度的单位
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	bool setRealSizeUnit(const char* p_bRealSizeUnit);

    /***********************************************************************
	*	概述：获取物体实际长度的单位
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool ：返回true，支持；
	*              返回false，不支持。
	*   功能正文：
	*       无
	************************************************************************/
	const char* getRealSizeUnit() const;

    /***********************************************************************
	*	概述：设置线段方位(水平/垂直)是否支持
	*	输入：
	*		p_bSegmentLayTypeEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setSegmentLayTypeEnable(const bool p_bSegmentLayTypeEnable);

    /***********************************************************************
	*	概述：获取线段方位(水平/垂直)的能力是否支持
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool ：返回true，支持；
	*              返回false，不支持。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getSegmentLayTypeEnable() const;

    /***********************************************************************
	*	概述：设置线段参数的能力是否支持
	*	输入：
	*		p_bSegmentEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setSegmentEnable(const bool p_bSegmentEnable);

    /***********************************************************************
	*	概述：获取线段参数的能力是否支持
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool ：返回true，支持；
	*              返回false，不支持。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getSegmentEnable() const;

	/***********************************************************************
	*	概述：设置摄像机抖动的能力是否支持
	*	输入：
	*		p_bCameraShakeEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setCameraShakeEnable(const bool p_bCameraShakeEnable);

    /***********************************************************************
	*	概述：获取摄像机抖动的能力是否支持
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool ：返回true，支持；
	*              返回false，不支持。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getCameraShakeEnable() const;

    /***********************************************************************
	*	概述：设置摄像机抖动的参数值的最小值
	*	输入：
	*		p_nCameraShakeMin ：摄像机抖动的参数值的最小值
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	void setCameraShakeMin(const int p_nCameraShakeMin);

    /***********************************************************************
	*	概述：获取摄像机抖动的参数值的最小值
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 摄像机抖动的参数值的最小值
	*   功能正文：
	*       无
	************************************************************************/
	const int getCameraShakeMin() const;

    /***********************************************************************
	*	概述：设置摄像机抖动的参数值的最大值
	*	输入：
	*		p_nCameraShakeMax ：摄像机抖动的参数值的最大值
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	void setCameraShakeMax(const int p_nCameraShakeMax);

    /***********************************************************************
	*	概述：获取摄像机抖动的参数值的最大值
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 摄像机抖动的参数值的最大值
	*   功能正文：
	*       无
	************************************************************************/
	const int getCameraShakeMax() const;

	/***********************************************************************
	*	概述：设置高噪声的能力是否支持
	*	输入：
	*		p_bHighNoiseEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setHighNoiseEnable(const bool p_bHighNoiseEnable);

    /***********************************************************************
	*	概述：获取高噪声的能力是否支持
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool ：返回true，支持；
	*              返回false，不支持。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getHighNoiseEnable() const;

    /***********************************************************************
	*	概述：设置高噪声的参数值的最小值
	*	输入：
	*		p_nHighNoiseMin ：高噪声的参数值的最小值
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	void setHighNoiseMin(const int p_nHighNoiseMin);

    /***********************************************************************
	*	概述：获取高噪声的参数值的最小值
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 高噪声的参数值的最小值
	*   功能正文：
	*       无
	************************************************************************/
	const int getHighNoiseMin() const;

    /***********************************************************************
	*	概述：设置高噪声的参数值的最大值
	*	输入：
	*		p_nHighNoiseMax ：高噪声的参数值的最大值
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	void setHighNoiseMax(const int p_nHighNoiseMax);

    /***********************************************************************
	*	概述：获取高噪声的参数值的最大值
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 高噪声的参数值的最大值
	*   功能正文：
	*       无
	************************************************************************/
	const int getHighNoiseMax() const;

	/***********************************************************************
	*	概述：设置低对比度的能力是否支持
	*	输入：
	*		p_bLowContrastEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setLowContrastEnable(const bool p_bLowContrastEnable);

    /***********************************************************************
	*	概述：获取低对比度的能力是否支持
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool ：返回true，支持；
	*              返回false，不支持。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getLowContrastEnable() const;

    /***********************************************************************
	*	概述：设置低对比度的参数值的最小值
	*	输入：
	*		p_nLowContrastMin ：低对比度的参数值的最小值
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	void setLowContrastMin(const int p_nLowContrastMin);

    /***********************************************************************
	*	概述：获取低对比度的参数值的最小值
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 低对比度的参数值的最小值
	*   功能正文：
	*       无
	************************************************************************/
	const int getLowContrastMin() const;

    /***********************************************************************
	*	概述：设置低对比度的参数值的最大值
	*	输入：
	*		p_nLowContrastMax ：低对比度的参数值的最大值
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	void setLowContrastMax(const int p_nLowContrastMax);

    /***********************************************************************
	*	概述：获取低对比度的参数值的最大值
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 低对比度的参数值的最大值
	*   功能正文：
	*       无
	************************************************************************/
	const int getLowContrastMax() const;

	/***********************************************************************
	*	概述：设置周期运动背景的能力是否支持
	*	输入：
	*		p_bPeriodMotionEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setPeriodMotionEnable(const bool p_bPeriodMotionEnable);

    /***********************************************************************
	*	概述：获取周期运动背景的能力是否支持
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool ：返回true，支持；
	*              返回false，不支持。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getPeriodMotionEnable() const;

    /***********************************************************************
	*	概述：设置周期运动背景的参数值的最小值
	*	输入：
	*		p_nPeriodMotionMin ：周期运动背景的参数值的最小值
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	void setPeriodMotionMin(const int p_nPeriodMotionMin);

    /***********************************************************************
	*	概述：获取周期运动背景的参数值的最小值
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 周期运动背景的参数值的最小值
	*   功能正文：
	*       无
	************************************************************************/
	const int getPeriodMotionMin() const;

    /***********************************************************************
	*	概述：设置周期运动背景的参数值的最大值
	*	输入：
	*		p_nPeriodMotionMax ：周期运动背景的参数值的最大值
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	void setPeriodMotionMax(const int p_nPeriodMotionMax);

    /***********************************************************************
	*	概述：获取周期运动背景的参数值的最大值
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 周期运动背景的参数值的最大值
	*   功能正文：
	*       无
	************************************************************************/
	const int getPeriodMotionMax() const;

	////
	    /***********************************************************************
	*	概述：设置周期运动时间的能力是否支持
	*	输入：
	*		p_bPeriodMotionTimeEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setPeriodMotionTimeEnable(const bool p_bPeriodMotionTimeEnable);

    /***********************************************************************
	*	概述：获取周期运动时间的能力是否支持
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool ：返回true，支持；
	*              返回false，不支持。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getPeriodMotionTimeEnable() const;

    /***********************************************************************
	*	概述：设置周期运动时间的参数值的最小值
	*	输入：
	*		p_nPeriodMotionTimeMin ：周期运动时间的参数值的最小值
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	void setPeriodMotionTimeMin(const int p_nPeriodMotionTimeMin);

    /***********************************************************************
	*	概述：获取周期运动时间的参数值的最小值
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 周期运动时间的参数值的最小值
	*   功能正文：
	*       无
	************************************************************************/
	const int getPeriodMotionTimeMin() const;

    /***********************************************************************
	*	概述：设置周期运动时间的参数值的最大值
	*	输入：
	*		p_nPeriodMotionTimeMax ：周期运动时间的参数值的最大值
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	void setPeriodMotionTimeMax(const int p_nPeriodMotionTimeMax);

    /***********************************************************************
	*	概述：获取周期运动时间的参数值的最大值
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 周期运动时间的参数值的最大值
	*   功能正文：
	*       无
	************************************************************************/
	const int getPeriodMotionTimeMax() const;

    /***********************************************************************
	*	概述：设置周期运动时间的参数值的单位
	*	输入：
	*		p_pPeriodMotionTimeUnit ：周期运动时间的参数值的单位
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       无
	************************************************************************/
	bool setPeriodMotionTimeUnit(const char* p_pPeriodMotionTimeUnit);

    /***********************************************************************
	*	概述：获取周期运动时间的参数值的单位
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		string : 周期运动时间的参数值的单位
	*   功能正文：
	*       无
	************************************************************************/
	const char* getPeriodMotionTimeUnit() const;

private:
	bool m_bEnable;
	int m_nLibId;

	bool m_bSceneEnable;
	int m_nSceneMin;
	int m_nSceneMax;
	

	bool m_bHightEnable;

	bool m_bAngleEnable;
	

	bool m_bFOVEnable;
	
	bool m_bPixelToRealSizeEnable;
	bool m_bRealSizeEnable;
	
	bool m_bSegmentLayTypeEnable;
	bool m_bSegmentEnable;
//add new
	bool m_bCameraShakeEnable;
	int m_nCameraShakeMin;
	int m_nCameraShakeMax;

	bool m_bHighNoiseEnable;
	int m_nHighNoiseMin;
	int m_nHighNoiseMax;

	bool m_bLowContrastEnable;
	int m_nLowContrastMin;
	int m_nLowContrastMax;

	bool m_bPeriodMotionEnable;
	int m_nPeriodMotionMin;
	int m_nPeriodMotionMax;

	bool m_bPeriodMotionTimeEnable;
	int m_nPeriodMotionTimeMin;
	int m_nPeriodMotionTimeMax;
	

	char m_pSceneUnit[CONST_INTELLIGENCE_ANALYSE_UNIT_LEN + 1];
	char m_pHightUnit[CONST_INTELLIGENCE_ANALYSE_UNIT_LEN + 1];
	char m_pAngleUnit[CONST_INTELLIGENCE_ANALYSE_UNIT_LEN + 1];
	char m_pFOVUnit[CONST_INTELLIGENCE_ANALYSE_UNIT_LEN + 1];
	char m_pRealSizeUnit[CONST_INTELLIGENCE_ANALYSE_UNIT_LEN + 1];
	char m_pPeriodMotionTimeUnit[CONST_INTELLIGENCE_ANALYSE_UNIT_LEN + 1];
}_PACKED_1_;

/**********************************************************************/
#ifdef PRAGMA_PACK
 	#ifdef WIN32  
		#pragma pack(pop)
	#endif
#endif
/**********************************************************************/

#endif   //_ADVANCED_ABILITY_H_
