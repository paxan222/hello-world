#ifndef _MOTIONDETECTIONABILITYV2_H_
#define _MOTIONDETECTIONABILITYV2_H_

#include "SNPlatOS.h"

/**********************************************************************/
//此处用于控制文件编译字节对齐，拷贝时两行注释间内容需一起拷贝，
//结束处的“#ifdef PRAGMA_PACK”部分也要一起拷贝，否则pragma pack入栈出栈不匹配
#if(PRAGMA_PACK_DEFINE != 10000)
	# error Not included "SNPlatOS.h".
#endif
 
#ifdef PRAGMA_PACK
	#ifdef WIN32  
		#pragma pack(push, PRAGMA_PACK_CHAR)
	#endif

	#ifndef WIN32  
		#ifndef _PACKED_1_  
		  
		#define _PACKED_1_ __attribute__((packed, aligned(PRAGMA_PACK_CHAR)))	// for gcc   
		#endif  
	#else  
		#ifndef _PACKED_1_  
		#define _PACKED_1_  
		#endif  
	#endif  
#else  
	#ifndef _PACKED_1_  
	#define _PACKED_1_  
	#endif  
#endif
/**********************************************************************/

class SN_DLL_API MotionDetectionAbilityV2
{
public:
	MotionDetectionAbilityV2();
	~MotionDetectionAbilityV2();

    /***********************************************************************
	*	概述：设置提供移动侦测（MotionDetection）功能的智能库的ID
	*	输入：
	*		p_nLibId ：智能库ID
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入的智能库ID需要跟能力列表的库ID匹配，不然将视为非法的ID，
	*       功能无法正常启用。
	************************************************************************/
	void setLibId(const int p_nLibId);

    /***********************************************************************
	*	概述：获取提供移动侦测（MotionDetection）功能的智能库的ID
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		const int : 当前提供该功能的智能库ID
	*   功能正文：
	*       返回的库ID是当前设备提供该智能分析功能的库ID
	************************************************************************/
	const int getLibId() const;

    /***********************************************************************
	*	概述：设置是否支持移动侦测方格的配置
	*	输入：
	*		p_bCellEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setCellEnable(const bool p_bCellEnable);

    /***********************************************************************
	*	概述：获取是否支持移动侦测方格的配置
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool : 如果启用，返回true；
	*              如果不启用，返回false。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getCellEnable() const;

    /***********************************************************************
	*	概述：设置移动侦测方格的高的块数
	*	输入：
	*		p_nCellHeightCellNumber ：移动侦测方格的高的块数
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setCellHeightCellNumber(const int p_nCellHeightCellNumber);

    /***********************************************************************
	*	概述：获取移动侦测方格的高的块数
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 移动侦测方格的高的块数
	*   功能正文：
	*       无
	************************************************************************/
	const int getCellHeightCellNumber() const;

    /***********************************************************************
	*	概述：设置移动侦测方格的宽的块数
	*	输入：
	*		p_nCellWidthCellNumber ：移动侦测方格的宽的块数
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setCellWidthCellNumber(const int p_nCellWidthCellNumber);

    /***********************************************************************
	*	概述：获取移动侦测方格的宽的块数
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 移动侦测方格的宽的块数
	*   功能正文：
	*       无
	************************************************************************/
	const int getCellWidthCellNumber() const;

    /***********************************************************************
	*	概述：设置移动侦测（MotionDetection）能力是否支持
	*	输入：
	*		p_bEnable ：是否支持该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setEnable(const bool p_bEnable);

    /***********************************************************************
	*	概述：获取移动侦测（MotionDetection）能力是否支持
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool : 如果支持，返回true；
	*              如果不支持，返回false。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getEnable() const;

    /***********************************************************************
	*	概述：设置是否支持灵敏度的配置
	*	输入：
	*		p_bSensitivityEnable ：是否支持配置该项能力
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setSensitivityEnable(const bool p_bSensitivityEnable);

    /***********************************************************************
	*	概述：获取是否支持灵敏度的配置
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		bool : 如果支持，返回true；
	*              如果不支持，返回false。
	*   功能正文：
	*       无
	************************************************************************/
	const bool getSensitivityEnable() const;

    /***********************************************************************
	*	概述：设置所支持配置的灵敏度的最大值
	*	输入：
	*		p_nSensitivityMax ：所支持配置的灵敏度的最大值
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setSensitivityMax(const int p_nSensitivityMax);

    /***********************************************************************
	*	概述：获取所支持配置的灵敏度的最大值
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 所支持配置的灵敏度的最大值
	*   功能正文：
	*       无
	************************************************************************/
	const int getSensitivityMax() const;

    /***********************************************************************
	*	概述：设置所支持配置的灵敏度的最小值
	*	输入：
	*		p_nSensitivityMin ：所支持配置的灵敏度的最小值
	*	输出：
	*		无
	*	返回值：
	*		无
	*   功能正文：
	*       输入为true : 支持该项能力；
	*       输入为false : 不支持该项能力。
	************************************************************************/
	void setSensitivityMin(const int p_nSensitivityMin);

    /***********************************************************************
	*	概述：获取所支持配置的灵敏度的最小值
	*	输入：
	*		无
	*	输出：
	*		无
	*	返回值：
	*		int : 所支持配置的灵敏度的最小值
	*   功能正文：
	*       无
	************************************************************************/
	const int getSensitivityMin() const;

private:
	int m_nLibId;
	bool m_bCellEnable;
	int m_nCellHeightCellNumber;
	int m_nCellWidthCellNumber;
	bool m_bEnable;
	bool m_bSensitivityEnable;
	int m_nSensitivityMax;
	int m_nSensitivityMin;
}_PACKED_1_;

/**********************************************************************/
#ifdef PRAGMA_PACK
 	#ifdef WIN32  
		#pragma pack(pop)
	#endif
#endif
/**********************************************************************/

#endif   //_MOTIONDETECTIONABILITYV2_H_
