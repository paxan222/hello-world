#ifndef _COLORPARAM_H_
#define _COLORPARAM_H_

#include "SNPlatOS.h"

/**********************************************************************/
//此处用于控制文件编译字节对齐，拷贝时两行注释间内容需一起拷贝，
//结束处的“#ifdef PRAGMA_PACK”部分也要一起拷贝，否则pragma pack入栈出栈不匹配
#if(PRAGMA_PACK_DEFINE != 10000)
	# error Not included "SNPlatOS.h".
#endif
 
#ifdef PRAGMA_PACK
	#ifdef WIN32  
		#pragma pack(push, PRAGMA_PACK_CHAR)
	#endif

	#ifndef WIN32  
		#ifndef _PACKED_1_  
		  
		#define _PACKED_1_ __attribute__((packed, aligned(PRAGMA_PACK_CHAR)))	// for gcc   
		#endif  
	#else  
		#ifndef _PACKED_1_  
		#define _PACKED_1_  
		#endif  
	#endif  
#else  
	#ifndef _PACKED_1_  
	#define _PACKED_1_  
	#endif  
#endif
/**********************************************************************/

class SN_DLL_API ColorParam
{

public:
	ColorParam();
	~ColorParam();

	//拷贝构造函数
	ColorParam(const ColorParam &p_objColorParam);

public:
	/****************************************************************************
	**概述：
	*		设置红色值
    **输入：
	*		p_nRed：红色值（0-255）
	**输出：
	*		无
	**返回值：
	*		无 
	**功能：
	*		
	*******************************************************************************/
	void setRed(const unsigned int p_nRed);

	/****************************************************************************
	**概述：
	*		获得红色值
    **输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		红色值，0-255
	**功能：
	*	
	*******************************************************************************/
	const unsigned int getRed() const;


	/****************************************************************************
	**概述：
	*		设置绿色值
	**输入：
	*		p_nGreen：绿色值（0-255）
	**输出：
	*		无
	**返回值：
	*		无 
	**功能：
	*		
	*******************************************************************************/
	void setGreen(const unsigned int p_nGreen);

	/****************************************************************************
	**概述：
	*		获得绿色值
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		绿色值，0-255
	**功能：
	*	
	*******************************************************************************/
	const unsigned int getGreen() const;


	/****************************************************************************
	**概述：
	*		设置蓝色值
	**输入：
	*		p_nBlue：蓝色值（0-255）
	**输出：
	*		无
	**返回值：
	*		无 
	**功能：
	*		
	*******************************************************************************/
	void setBlue(const unsigned int p_nBlue);

	/****************************************************************************
	**概述：
	*		获得蓝色值
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		蓝色值，0-255
	**功能：
	*	
	*******************************************************************************/
	const unsigned int getBlue() const;


	/****************************************************************************
	**概述：
	*		设置透明度
	**输入：
	*		p_nAlpha：透明度 0:完全透明 100：完全不透明
	**输出：
	*		无
	**返回值：
	*		无 
	**功能：
	*		
	*******************************************************************************/
	void setAlpha(const unsigned int p_nAlpha);

	/****************************************************************************
	**概述：
	*		获得透明度
	**输入：
	*		无
	**输出：
	*		无
	**返回值：
	*		透明度
	**功能：
	*
	*******************************************************************************/
	const unsigned int getAlpha() const;

	/****************************************************************************
	**概述：
	*		赋值函数
	**输入：
	*		ColorParam类的一个对象的引用。
	**输出：
	*		无
	**返回值：
	*		区域对象的引用
	**功能：
	*		将参数对象的所有属性赋值给另外一个对象，将另外一个对象的引用返回。
	*******************************************************************************/
	ColorParam & operator =(const ColorParam& p_objColorParam) ;

	/****************************************************************************
	**概述：
	*			定义“等于”操作符
    **输入：
	*			区域的一个对象的引用。
	**输出：
	*		无
	**返回值：
	*		true:相等
	*		false：不相等
	**功能：
	*		但两个区域的对象，所有属性均相等，则说明这两个对象相等，返回true
	*		如果有一个属性不等，则返回false。
	*****************************************************************************/
	bool operator == (const ColorParam& p_objColorParam) const;


private:
	unsigned int		m_nRed;									//红色值（0-255）
	unsigned int		m_nGreen;								//绿色值（0-255）
	unsigned int		m_nBlue;								//蓝色值（0-255）
	unsigned int		m_nAlpha;								//透明度（0-100）

}_PACKED_1_;

/**********************************************************************/
#ifdef PRAGMA_PACK
 	#ifdef WIN32  
		#pragma pack(pop)
	#endif
 #endif
/**********************************************************************/

#endif //_COLORPARAM_H_


