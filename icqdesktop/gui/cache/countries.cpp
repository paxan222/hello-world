#include "stdafx.h"
#include "countries.h"

namespace Ui
{
	namespace countries
	{
		countries_list countries_;

		void init(countries_list& countries_)
		{
			countries_.reserve(250);
			countries_.emplace_back(1, 1, 3, QT_TRANSLATE_NOOP("countries", "USA"), "us");
			countries_.emplace_back(101, 1, 3, QT_TRANSLATE_NOOP("countries", "Anguilla"), "ai");
			countries_.emplace_back(1021, 1, 3, QT_TRANSLATE_NOOP("countries", "Antigua and Barbuda"), "ag");
			countries_.emplace_back(103, 1, 3, QT_TRANSLATE_NOOP("countries", "Bahamas"), "bs");
			countries_.emplace_back(104, 1, 3, QT_TRANSLATE_NOOP("countries", "Barbados"), "bb");
			countries_.emplace_back(105, 1, 3, QT_TRANSLATE_NOOP("countries", "Bermuda"), "bm");
			countries_.emplace_back(106, 1, 3, QT_TRANSLATE_NOOP("countries", "British Virgin Islands"), "vg");
			countries_.emplace_back(107, 1, 3, QT_TRANSLATE_NOOP("countries", "Canada"), "ca");
			countries_.emplace_back(108, 1, 3, QT_TRANSLATE_NOOP("countries", "Cayman Islands"), "ky");
			countries_.emplace_back(109, 1, 3, QT_TRANSLATE_NOOP("countries", "Dominica"), "dm");
			countries_.emplace_back(110, 1, 3, QT_TRANSLATE_NOOP("countries", "Dominican Republic"), "do");
			countries_.emplace_back(111, 1, 3, QT_TRANSLATE_NOOP("countries", "Grenada"), "gd");
			countries_.emplace_back(112, 1, 3, QT_TRANSLATE_NOOP("countries", "Jamaica"), "jm");
			countries_.emplace_back(113, 1, 3, QT_TRANSLATE_NOOP("countries", "Montserrat"), "ms");
			countries_.emplace_back(114, 1, 6, QT_TRANSLATE_NOOP("countries", "Nevis"), "xb");
			countries_.emplace_back(115, 1, 6, QT_TRANSLATE_NOOP("countries", "St. Kitts"), "kn");
			countries_.emplace_back(1141, 1, 3, QT_TRANSLATE_NOOP("countries", "Saint Kitts and Nevis"), "kn");
			countries_.emplace_back(116, 1, 3, QT_TRANSLATE_NOOP("countries", "St. Vincent and the Grenadines"), "vc");
			countries_.emplace_back(117, 1, 3, QT_TRANSLATE_NOOP("countries", "Trinidad and Tobago"), "tt");
			countries_.emplace_back(118, 1, 3, QT_TRANSLATE_NOOP("countries", "Turks and Caicos Islands"), "tc");
			countries_.emplace_back(120, 1, 6, QT_TRANSLATE_NOOP("countries", "Barbuda"), "ag");
			countries_.emplace_back(121, 1, 3, QT_TRANSLATE_NOOP("countries", "Puerto Rico, Common Wealth of"), "pr");
			countries_.emplace_back(122, 1, 3, QT_TRANSLATE_NOOP("countries", "Saint Lucia"), "lc");
			countries_.emplace_back(123, 1, 3, QT_TRANSLATE_NOOP("countries", "Virgin Islands of the United States"), "vi");
			countries_.emplace_back(178, 1, 3, QT_TRANSLATE_NOOP("countries", "Canary Islands"), "ic");
			countries_.emplace_back(20, 20, 3, QT_TRANSLATE_NOOP("countries", "Egypt"), "eg");
			countries_.emplace_back(212, 212, 3, QT_TRANSLATE_NOOP("countries", "Morocco"), "ma");
			countries_.emplace_back(213, 213, 3, QT_TRANSLATE_NOOP("countries", "Algeria"), "dz");
			countries_.emplace_back(216, 216, 3, QT_TRANSLATE_NOOP("countries", "Tunisia"), "tn");
			countries_.emplace_back(218, 218, 3, QT_TRANSLATE_NOOP("countries", "Libyan Arab Jamahiriya"), "ly");
			countries_.emplace_back(220, 220, 3, QT_TRANSLATE_NOOP("countries", "Gambia"), "gm");
			countries_.emplace_back(221, 221, 3, QT_TRANSLATE_NOOP("countries", "Senegal"), "sn");
			countries_.emplace_back(222, 222, 3, QT_TRANSLATE_NOOP("countries", "Mauritania"), "mr");
			countries_.emplace_back(223, 223, 3, QT_TRANSLATE_NOOP("countries", "Mali"), "ml");
			countries_.emplace_back(224, 224, 3, QT_TRANSLATE_NOOP("countries", "Guinea"), "gn");
			countries_.emplace_back(226, 226, 3, QT_TRANSLATE_NOOP("countries", "Burkina Faso"), "bf");
			countries_.emplace_back(227, 227, 3, QT_TRANSLATE_NOOP("countries", "Niger"), "ne");
			countries_.emplace_back(228, 228, 3, QT_TRANSLATE_NOOP("countries", "Togo"), "tg");
			countries_.emplace_back(229, 229, 3, QT_TRANSLATE_NOOP("countries", "Benin"), "bj");
			countries_.emplace_back(230, 230, 3, QT_TRANSLATE_NOOP("countries", "Mauritius"), "mu");
			countries_.emplace_back(231, 231, 3, QT_TRANSLATE_NOOP("countries", "Liberia"), "lr");
			countries_.emplace_back(232, 232, 3, QT_TRANSLATE_NOOP("countries", "Sierra Leone"), "sl");
			countries_.emplace_back(233, 233, 3, QT_TRANSLATE_NOOP("countries", "Ghana"), "gh");
			countries_.emplace_back(234, 234, 3, QT_TRANSLATE_NOOP("countries", "Nigeria"), "ng");
			countries_.emplace_back(235, 235, 3, QT_TRANSLATE_NOOP("countries", "Chad"), "td");
			countries_.emplace_back(236, 236, 3, QT_TRANSLATE_NOOP("countries", "Central African Republic"), "cf");
			countries_.emplace_back(237, 237, 3, QT_TRANSLATE_NOOP("countries", "Cameroon"), "cm");
			countries_.emplace_back(238, 238, 3, QT_TRANSLATE_NOOP("countries", "Cape Verde Islands"), "cv");
			countries_.emplace_back(240, 240, 3, QT_TRANSLATE_NOOP("countries", "Equatorial Guinea"), "gq");
			countries_.emplace_back(241, 241, 3, QT_TRANSLATE_NOOP("countries", "Gabon"), "ga");
			countries_.emplace_back(242, 242, 3, QT_TRANSLATE_NOOP("countries", "Congo, (Republic of the)"), "cg");
			countries_.emplace_back(243, 243, 3, QT_TRANSLATE_NOOP("countries", "Congo, Democratic Republic of (Zaire)"), "cd");
			countries_.emplace_back(244, 244, 3, QT_TRANSLATE_NOOP("countries", "Angola"), "ao");
			countries_.emplace_back(246, 246, 3, QT_TRANSLATE_NOOP("countries", "Diego Garcia"), "dg");
			countries_.emplace_back(247, 247, 3, QT_TRANSLATE_NOOP("countries", "Ascension Island"), "sh");
			countries_.emplace_back(248, 248, 3, QT_TRANSLATE_NOOP("countries", "Seychelles"), "sc");
			countries_.emplace_back(249, 249, 3, QT_TRANSLATE_NOOP("countries", "Sudan"), "sd");
			countries_.emplace_back(250, 250, 3, QT_TRANSLATE_NOOP("countries", "Rwanda"), "rw");
			countries_.emplace_back(251, 251, 3, QT_TRANSLATE_NOOP("countries", "Ethiopia"), "et");
			countries_.emplace_back(252, 252, 3, QT_TRANSLATE_NOOP("countries", "Somalia"), "so");
			countries_.emplace_back(253, 253, 3, QT_TRANSLATE_NOOP("countries", "Djibouti"), "dj");
			countries_.emplace_back(254, 254, 3, QT_TRANSLATE_NOOP("countries", "Kenya"), "ke");
			countries_.emplace_back(255, 255, 3, QT_TRANSLATE_NOOP("countries", "Tanzania, United Republic of"), "tz");
			countries_.emplace_back(256, 256, 3, QT_TRANSLATE_NOOP("countries", "Uganda"), "ug");
			countries_.emplace_back(257, 257, 3, QT_TRANSLATE_NOOP("countries", "Burundi"), "bi");
			countries_.emplace_back(258, 258, 3, QT_TRANSLATE_NOOP("countries", "Mozambique"), "mz");
			countries_.emplace_back(260, 260, 3, QT_TRANSLATE_NOOP("countries", "Zambia"), "zm");
			countries_.emplace_back(261, 261, 3, QT_TRANSLATE_NOOP("countries", "Madagascar"), "mg");
			countries_.emplace_back(262, 262, 3, QT_TRANSLATE_NOOP("countries", "Reunion Island"), "xri");
			countries_.emplace_back(263, 263, 3, QT_TRANSLATE_NOOP("countries", "Zimbabwe"), "zw");
			countries_.emplace_back(264, 264, 3, QT_TRANSLATE_NOOP("countries", "Namibia"), "na");
			countries_.emplace_back(265, 265, 3, QT_TRANSLATE_NOOP("countries", "Malawi"), "mw");
			countries_.emplace_back(266, 266, 3, QT_TRANSLATE_NOOP("countries", "Lesotho"), "ls");
			countries_.emplace_back(267, 267, 3, QT_TRANSLATE_NOOP("countries", "Botswana"), "bw");
			countries_.emplace_back(268, 268, 3, QT_TRANSLATE_NOOP("countries", "Swaziland"), "sz");
			countries_.emplace_back(269, 269, 3, QT_TRANSLATE_NOOP("countries", "Mayotte Island"), "yt");
			countries_.emplace_back(2691, 269, 3, QT_TRANSLATE_NOOP("countries", "Comoros"), "km");
			countries_.emplace_back(27, 27, 3, QT_TRANSLATE_NOOP("countries", "South Africa"), "za");
			countries_.emplace_back(291, 291, 3, QT_TRANSLATE_NOOP("countries", "Eritrea"), "er");
			countries_.emplace_back(297, 297, 3, QT_TRANSLATE_NOOP("countries", "Aruba"), "aw");
			countries_.emplace_back(298, 298, 3, QT_TRANSLATE_NOOP("countries", "Faeroe Islands"), "fo");
			countries_.emplace_back(299, 299, 3, QT_TRANSLATE_NOOP("countries", "Greenland"), "gl");
			countries_.emplace_back(30, 30, 3, QT_TRANSLATE_NOOP("countries", "Greece"), "gr");
			countries_.emplace_back(31, 31, 3, QT_TRANSLATE_NOOP("countries", "Netherlands"), "nl");
			countries_.emplace_back(32, 32, 3, QT_TRANSLATE_NOOP("countries", "Belgium"), "be");
			countries_.emplace_back(33, 33, 3, QT_TRANSLATE_NOOP("countries", "France"), "fr");
			countries_.emplace_back(34, 34, 3, QT_TRANSLATE_NOOP("countries", "Spain"), "es");
			countries_.emplace_back(350, 350, 3, QT_TRANSLATE_NOOP("countries", "Gibraltar"), "gi");
			countries_.emplace_back(351, 351, 3, QT_TRANSLATE_NOOP("countries", "Portugal"), "pt");
			countries_.emplace_back(352, 352, 3, QT_TRANSLATE_NOOP("countries", "Luxembourg"), "lu");
			countries_.emplace_back(353, 353, 3, QT_TRANSLATE_NOOP("countries", "Ireland"), "ie");
			countries_.emplace_back(354, 354, 3, QT_TRANSLATE_NOOP("countries", "Iceland"), "is");
			countries_.emplace_back(355, 355, 3, QT_TRANSLATE_NOOP("countries", "Albania"), "al");
			countries_.emplace_back(356, 356, 3, QT_TRANSLATE_NOOP("countries", "Malta"), "mt");
			countries_.emplace_back(357, 357, 3, QT_TRANSLATE_NOOP("countries", "Cyprus"), "cy");
			countries_.emplace_back(358, 358, 3, QT_TRANSLATE_NOOP("countries", "Finland"), "fi");
			countries_.emplace_back(359, 359, 3, QT_TRANSLATE_NOOP("countries", "Bulgaria"), "bg");
			countries_.emplace_back(36, 36, 3, QT_TRANSLATE_NOOP("countries", "Hungary"), "hu");
			countries_.emplace_back(370, 370, 3, QT_TRANSLATE_NOOP("countries", "Lithuania"), "lt");
			countries_.emplace_back(371, 371, 3, QT_TRANSLATE_NOOP("countries", "Latvia"), "lv");
			countries_.emplace_back(372, 372, 3, QT_TRANSLATE_NOOP("countries", "Estonia"), "ee");
			countries_.emplace_back(373, 373, 3, QT_TRANSLATE_NOOP("countries", "Moldova, Republic of"), "md");
			countries_.emplace_back(374, 374, 3, QT_TRANSLATE_NOOP("countries", "Armenia"), "am");
			countries_.emplace_back(375, 375, 3, QT_TRANSLATE_NOOP("countries", "Belarus"), "by");
			countries_.emplace_back(376, 376, 3, QT_TRANSLATE_NOOP("countries", "Andorra"), "ad");
			countries_.emplace_back(377, 377, 3, QT_TRANSLATE_NOOP("countries", "Monaco"), "mc");
			countries_.emplace_back(378, 378, 3, QT_TRANSLATE_NOOP("countries", "San Marino"), "sm");
			countries_.emplace_back(379, 39, 3, QT_TRANSLATE_NOOP("countries", "Vatican City"), "va");
			countries_.emplace_back(380, 380, 3, QT_TRANSLATE_NOOP("countries", "Ukraine"), "ua");
			countries_.emplace_back(381, 381, 6, QT_TRANSLATE_NOOP("countries", "Yugoslavia"), "yu");
			countries_.emplace_back(385, 385, 3, QT_TRANSLATE_NOOP("countries", "Croatia"), "hr");
			countries_.emplace_back(386, 386, 3, QT_TRANSLATE_NOOP("countries", "Slovenia"), "si");
			countries_.emplace_back(387, 387, 3, QT_TRANSLATE_NOOP("countries", "Bosnia and Herzegovina"), "ba");
			countries_.emplace_back(39, 39, 3, QT_TRANSLATE_NOOP("countries", "Italy"), "it");
			countries_.emplace_back(40, 40, 3, QT_TRANSLATE_NOOP("countries", "Romania"), "ro");
			countries_.emplace_back(41, 41, 3, QT_TRANSLATE_NOOP("countries", "Switzerland"), "ch");
			countries_.emplace_back(4101, 423, 3, QT_TRANSLATE_NOOP("countries", "Liechtenstein"), "li");
			countries_.emplace_back(42, 420, 3, QT_TRANSLATE_NOOP("countries", "Czech Republic"), "cz");
			countries_.emplace_back(4201, 421, 3, QT_TRANSLATE_NOOP("countries", "Slovakia"), "sk");
			countries_.emplace_back(43, 43, 3, QT_TRANSLATE_NOOP("countries", "Austria"), "at");
			countries_.emplace_back(44, 44, 3, QT_TRANSLATE_NOOP("countries", "United Kingdom"), "gb");
			countries_.emplace_back(441, 44, 6, QT_TRANSLATE_NOOP("countries", "Wales"), "xwa");
			countries_.emplace_back(442, 44, 6, QT_TRANSLATE_NOOP("countries", "Scotland"), "xsc");
			countries_.emplace_back(45, 45, 3, QT_TRANSLATE_NOOP("countries", "Denmark"), "dk");
			countries_.emplace_back(46, 46, 3, QT_TRANSLATE_NOOP("countries", "Sweden"), "se");
			countries_.emplace_back(47, 47, 3, QT_TRANSLATE_NOOP("countries", "Norway"), "no");
			countries_.emplace_back(48, 48, 3, QT_TRANSLATE_NOOP("countries", "Poland"), "pl");
			countries_.emplace_back(49, 49, 3, QT_TRANSLATE_NOOP("countries", "Germany"), "de");
			countries_.emplace_back(500, 500, 3, QT_TRANSLATE_NOOP("countries", "Falkland Islands"), "fk");
			countries_.emplace_back(501, 501, 3, QT_TRANSLATE_NOOP("countries", "Belize"), "bz");
			countries_.emplace_back(502, 502, 3, QT_TRANSLATE_NOOP("countries", "Guatemala"), "gt");
			countries_.emplace_back(503, 503, 3, QT_TRANSLATE_NOOP("countries", "El Salvador"), "sv");
			countries_.emplace_back(504, 504, 3, QT_TRANSLATE_NOOP("countries", "Honduras"), "hn");
			countries_.emplace_back(505, 505, 3, QT_TRANSLATE_NOOP("countries", "Nicaragua"), "ni");
			countries_.emplace_back(506, 506, 3, QT_TRANSLATE_NOOP("countries", "Costa Rica"), "cr");
			countries_.emplace_back(507, 507, 3, QT_TRANSLATE_NOOP("countries", "Panama"), "pa");
			countries_.emplace_back(509, 509, 3, QT_TRANSLATE_NOOP("countries", "Haiti"), "ht");
			countries_.emplace_back(51, 51, 3, QT_TRANSLATE_NOOP("countries", "Peru"), "pe");
			countries_.emplace_back(52, 52, 3, QT_TRANSLATE_NOOP("countries", "Mexico"), "mx");
			countries_.emplace_back(53, 53, 3, QT_TRANSLATE_NOOP("countries", "Cuba"), "cu");
			countries_.emplace_back(54, 54, 3, QT_TRANSLATE_NOOP("countries", "Argentina"), "ar");
			countries_.emplace_back(55, 55, 3, QT_TRANSLATE_NOOP("countries", "Brazil"), "br");
			countries_.emplace_back(56, 56, 3, QT_TRANSLATE_NOOP("countries", "Chile, Republic of"), "cl");
			countries_.emplace_back(57, 57, 3, QT_TRANSLATE_NOOP("countries", "Colombia"), "co");
			countries_.emplace_back(58, 58, 3, QT_TRANSLATE_NOOP("countries", "Venezuela"), "ve");
			countries_.emplace_back(590, 590, 3, QT_TRANSLATE_NOOP("countries", "Guadeloupe"), "gp");
			countries_.emplace_back(5901, 590, 6, QT_TRANSLATE_NOOP("countries", "French Antilles"), "xfa");
			countries_.emplace_back(5902, 590, 3, QT_TRANSLATE_NOOP("countries", "Antilles"), "an");
			countries_.emplace_back(591, 591, 3, QT_TRANSLATE_NOOP("countries", "Bolivia"), "bo");
			countries_.emplace_back(592, 592, 3, QT_TRANSLATE_NOOP("countries", "Guyana"), "gy");
			countries_.emplace_back(593, 593, 3, QT_TRANSLATE_NOOP("countries", "Ecuador"), "ec");
			countries_.emplace_back(594, 594, 3, QT_TRANSLATE_NOOP("countries", "French Guiana"), "gf");
			countries_.emplace_back(595, 595, 3, QT_TRANSLATE_NOOP("countries", "Paraguay"), "py");
			countries_.emplace_back(596, 596, 3, QT_TRANSLATE_NOOP("countries", "Martinique"), "mq");
			countries_.emplace_back(597, 597, 3, QT_TRANSLATE_NOOP("countries", "Suriname"), "sr");
			countries_.emplace_back(598, 598, 3, QT_TRANSLATE_NOOP("countries", "Uruguay"), "uy");
			countries_.emplace_back(599, 599, 3, QT_TRANSLATE_NOOP("countries", "Netherlands Antilles"), "an");
			countries_.emplace_back(60, 60, 3, QT_TRANSLATE_NOOP("countries", "Malaysia"), "my");
			countries_.emplace_back(61, 61, 3, QT_TRANSLATE_NOOP("countries", "Australia"), "au");
			countries_.emplace_back(6102, 61, 3, QT_TRANSLATE_NOOP("countries", "Cocos (Keeling) Islands"), "cc");
			countries_.emplace_back(62, 62, 3, QT_TRANSLATE_NOOP("countries", "Indonesia"), "id");
			countries_.emplace_back(63, 63, 3, QT_TRANSLATE_NOOP("countries", "Philippines"), "ph");
			countries_.emplace_back(64, 64, 3, QT_TRANSLATE_NOOP("countries", "New Zealand"), "nz");
			countries_.emplace_back(65, 65, 3, QT_TRANSLATE_NOOP("countries", "Singapore"), "sg");
			countries_.emplace_back(66, 66, 3, QT_TRANSLATE_NOOP("countries", "Thailand"), "th");
			countries_.emplace_back(670, 670, 3, QT_TRANSLATE_NOOP("countries", "Saipan Island"), "xsp");
			countries_.emplace_back(6701, 670, 3, QT_TRANSLATE_NOOP("countries", "Rota Island"), "xrt");
			countries_.emplace_back(6702, 670, 3, QT_TRANSLATE_NOOP("countries", "Tinian Island"), "xti");
			countries_.emplace_back(671, 671, 3, QT_TRANSLATE_NOOP("countries", "Guam, US Territory of"), "gu");
			countries_.emplace_back(672, 672, 3, QT_TRANSLATE_NOOP("countries", "Christmas Island"), "cx");
			countries_.emplace_back(6722, 672, 3, QT_TRANSLATE_NOOP("countries", "Norfolk Island"), "nf");
			countries_.emplace_back(673, 673, 3, QT_TRANSLATE_NOOP("countries", "Brunei"), "bn");
			countries_.emplace_back(674, 674, 3, QT_TRANSLATE_NOOP("countries", "Nauru"), "nr");
			countries_.emplace_back(675, 675, 3, QT_TRANSLATE_NOOP("countries", "Papua New Guinea"), "pg");
			countries_.emplace_back(676, 676, 3, QT_TRANSLATE_NOOP("countries", "Tonga"), "to");
			countries_.emplace_back(677, 677, 3, QT_TRANSLATE_NOOP("countries", "Solomon Islands"), "sb");
			countries_.emplace_back(678, 678, 3, QT_TRANSLATE_NOOP("countries", "Vanuatu"), "vu");
			countries_.emplace_back(679, 679, 3, QT_TRANSLATE_NOOP("countries", "Fiji"), "fj");
			countries_.emplace_back(680, 680, 3, QT_TRANSLATE_NOOP("countries", "Palau"), "pw");
			countries_.emplace_back(681, 681, 3, QT_TRANSLATE_NOOP("countries", "Wallis and Futuna Islands"), "wf");
			countries_.emplace_back(682, 682, 3, QT_TRANSLATE_NOOP("countries", "Cook Islands"), "ck");
			countries_.emplace_back(683, 683, 3, QT_TRANSLATE_NOOP("countries", "Niue"), "nu");
			countries_.emplace_back(684, 684, 3, QT_TRANSLATE_NOOP("countries", "Samoa"), "as");
			countries_.emplace_back(685, 685, 3, QT_TRANSLATE_NOOP("countries", "Western Samoa"), "ws");
			countries_.emplace_back(686, 686, 3, QT_TRANSLATE_NOOP("countries", "Kiribati"), "ki");
			countries_.emplace_back(687, 687, 3, QT_TRANSLATE_NOOP("countries", "New Caledonia"), "nc");
			countries_.emplace_back(688, 688, 3, QT_TRANSLATE_NOOP("countries", "Tuvalu"), "tv");
			countries_.emplace_back(689, 689, 3, QT_TRANSLATE_NOOP("countries", "French Polynesia"), "pf");
			countries_.emplace_back(690, 690, 3, QT_TRANSLATE_NOOP("countries", "Tokelau"), "tk");
			countries_.emplace_back(691, 691, 3, QT_TRANSLATE_NOOP("countries", "Micronesia, Federated States of"), "fm");
			countries_.emplace_back(692, 692, 3, QT_TRANSLATE_NOOP("countries", "Marshall Islands"), "mh");
			countries_.emplace_back(7, 7, 3, QT_TRANSLATE_NOOP("countries", "Russia"), "ru");
			countries_.emplace_back(705, 7, 3, QT_TRANSLATE_NOOP("countries", "Kazakhstan"), "kz");
			countries_.emplace_back(706, 7, 3, QT_TRANSLATE_NOOP("countries", "Kyrgyzstan"), "kg");
			countries_.emplace_back(708, 7, 3, QT_TRANSLATE_NOOP("countries", "Tajikistan"), "tj");
			countries_.emplace_back(709, 993, 3, QT_TRANSLATE_NOOP("countries", "Turkmenistan"), "tm");
			countries_.emplace_back(711, 998, 3, QT_TRANSLATE_NOOP("countries", "Uzbekistan"), "uz");
			countries_.emplace_back(81, 81, 3, QT_TRANSLATE_NOOP("countries", "Japan"), "jp");
			countries_.emplace_back(82, 82, 3, QT_TRANSLATE_NOOP("countries", "Korea (South Korea), Republic of"), "kr");
			countries_.emplace_back(84, 84, 3, QT_TRANSLATE_NOOP("countries", "Viet Nam"), "vn");
			countries_.emplace_back(852, 852, 3, QT_TRANSLATE_NOOP("countries", "Hong Kong"), "hk");
			countries_.emplace_back(853, 853, 3, QT_TRANSLATE_NOOP("countries", "Macau"), "mo");
			countries_.emplace_back(855, 855, 3, QT_TRANSLATE_NOOP("countries", "Cambodia"), "kh");
			countries_.emplace_back(86, 86, 3, QT_TRANSLATE_NOOP("countries", "China"), "cn");
			countries_.emplace_back(880, 880, 3, QT_TRANSLATE_NOOP("countries", "Bangladesh"), "bd");
			countries_.emplace_back(886, 886, 3, QT_TRANSLATE_NOOP("countries", "Taiwan"), "tw");
			countries_.emplace_back(90, 90, 3, QT_TRANSLATE_NOOP("countries", "Turkey"), "tr");
			countries_.emplace_back(91, 91, 3, QT_TRANSLATE_NOOP("countries", "India"), "in");
			countries_.emplace_back(92, 92, 3, QT_TRANSLATE_NOOP("countries", "Pakistan"), "pk");
			countries_.emplace_back(93, 93, 3, QT_TRANSLATE_NOOP("countries", "Afghanistan"), "af");
			countries_.emplace_back(94, 94, 3, QT_TRANSLATE_NOOP("countries", "Sri Lanka"), "lk");
			countries_.emplace_back(95, 95, 3, QT_TRANSLATE_NOOP("countries", "Myanmar"), "mm");
			countries_.emplace_back(960, 960, 3, QT_TRANSLATE_NOOP("countries", "Maldives"), "mv");
			countries_.emplace_back(961, 961, 3, QT_TRANSLATE_NOOP("countries", "Lebanon"), "lb");
			countries_.emplace_back(962, 962, 3, QT_TRANSLATE_NOOP("countries", "Jordan"), "jo");
			countries_.emplace_back(963, 963, 3, QT_TRANSLATE_NOOP("countries", "Syrian Arab Republic"), "sy");
			countries_.emplace_back(964, 964, 3, QT_TRANSLATE_NOOP("countries", "Iraq"), "iq");
			countries_.emplace_back(965, 965, 3, QT_TRANSLATE_NOOP("countries", "Kuwait"), "kw");
			countries_.emplace_back(966, 966, 3, QT_TRANSLATE_NOOP("countries", "Saudi Arabia"), "sa");
			countries_.emplace_back(967, 967, 3, QT_TRANSLATE_NOOP("countries", "Yemen"), "ye");
			countries_.emplace_back(968, 968, 3, QT_TRANSLATE_NOOP("countries", "Oman"), "om");
			countries_.emplace_back(971, 971, 3, QT_TRANSLATE_NOOP("countries", "United Arab Emirates"), "ae");
			countries_.emplace_back(972, 972, 3, QT_TRANSLATE_NOOP("countries", "Israel"), "il");
			countries_.emplace_back(973, 973, 3, QT_TRANSLATE_NOOP("countries", "Bahrain"), "bh");
			countries_.emplace_back(974, 974, 3, QT_TRANSLATE_NOOP("countries", "Qatar"), "qa");
			countries_.emplace_back(975, 975, 3, QT_TRANSLATE_NOOP("countries", "Bhutan"), "bt");
			countries_.emplace_back(976, 976, 3, QT_TRANSLATE_NOOP("countries", "Mongolia"), "mn");
			countries_.emplace_back(977, 977, 3, QT_TRANSLATE_NOOP("countries", "Nepal"), "np");
			countries_.emplace_back(98, 98, 3, QT_TRANSLATE_NOOP("countries", "Iran (Islamic Republic of)"), "ir");
			countries_.emplace_back(994, 994, 3, QT_TRANSLATE_NOOP("countries", "Azerbaijan"), "az");
			countries_.emplace_back(995, 995, 3, QT_TRANSLATE_NOOP("countries", "Georgia"), "ge");		
			countries_.emplace_back(225, 225, 3, QT_TRANSLATE_NOOP("countries", "Cote d'Ivoire"), "ci");
			countries_.emplace_back(239, 239, 3, QT_TRANSLATE_NOOP("countries", "Sao Tome &amp; Principe"), "st");
			countries_.emplace_back(245, 245, 3, QT_TRANSLATE_NOOP("countries", "Guinea-Bissau"), "gw");
			countries_.emplace_back(290, 290, 3, QT_TRANSLATE_NOOP("countries", "St. Helena"), "sh");
			countries_.emplace_back(3811, 381, 3, QT_TRANSLATE_NOOP("countries", "Yugoslavia - Serbia"), "rs");
			countries_.emplace_back(382, 381, 3, QT_TRANSLATE_NOOP("countries", "Yugoslavia - Montenegro"), "me");
			countries_.emplace_back(389, 389, 3, QT_TRANSLATE_NOOP("countries", "Macedonia (F.Y.R.O.M.)"), "mk");
			countries_.emplace_back(508, 508, 3, QT_TRANSLATE_NOOP("countries", "St. Pierre and Miquelon"), "pm");		
			countries_.emplace_back(850, 850, 3, QT_TRANSLATE_NOOP("countries", "Korea (North Korea), Democratic People's Republic of"), "kp");
			countries_.emplace_back(856, 856, 3, QT_TRANSLATE_NOOP("countries", "Lao People's Democratic Republic"), "la");
		}

		const countries_list& get()
		{
			if (countries_.empty())
				init(countries_);

			return countries_;
		}
	}

}

